---
title: "TLUtilities"
output: github_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Introduction

This package contains functions designed to process RACE light data using functions in the trawllight package. While trawllight provides functions to process light data, it is designed to work for a generic data structure, rather than being tailored to specifically processing RACE data. TLUtilities provides functions to read-in RACE data and iterate over casts to estimate optical parameters.


This document demonstrates how light data is processed using TLUtilities and trawllight.

## Installing trawllight and TLUtilities

Use the devtools pacakge to install trawlllight and TLUtilities. Functions in the trawllight pacakage have full documentation. Not all functions in TLUtilities currently have documentation.

```{r cars}
library(devtools)
# devtools::install_github("sean-rohan/trawllight")
# devtools::install_github("sean-rohan/TLUtilities")
library(trawllight)
library(TLUtilities)
```

## Import directory structure

TLUtilities requires the user to pass a character vector indicating where light data are maintained. Each directory should contain a single file names  CastTimes.csv, a single file named corr_Mk9Hauls.csv, and any number (including zero) of files named deck**.csv. The CastTimes.csv files contains survey event times associated with cast start/stop. The corr_Mk9.Hauls.csv file contains data from a TDR-Mk9 archival tag with time-stamps shifted to match 'survey' time in cases where temporal drift occurred.

```{r}
light.dir <- read.csv("D:/Projects/OneDrive/Thesis/Chapter 1 - Visual Foraging Condition in the Eastern Bering Sea/data/fileinv_lightdata_directory.csv", stringsAsFactors = F, header = F)

# Select EBS shelf directories
light.dir <- light.dir[which(grepl("ebs", light.dir[,1])),1]

print(light.dir[1:3])
```


## Read-in and process trawl light data

Run a wrapper function which runs `vertical_profiles`, `trawllight::convert_light`, `trawllight::filter_stepwise`, `trawllight::calculate_attenuation` for every cast in each of the target directories. The `vertical_profiles` function uses CastTimes to extract the light measurements from corr_Mk9Hauls.csv which were obtained during upcasts or downcasts. A time buffer can be specified to extend the cast window. Other arguments can be passed to the functions which are used for processing each cast.

Directories should be processed in batches of 4-6 vessel/cruise combinations to avoid issues with R memory limits (which can substantially increase processing time or cause R to crash). Downcasts and Upcasts should be processed separately. Here, processing is demonstrated for one vessel and one year. Change indexing of light.dir to process multiple years simultaneously (i.e. `light.dir[1:4]`). See below for description of values returned.

```{r}
print(light.dir[10])

ebs <- process_all(dir.structure = light.dir[10],
                   cast.dir = "Downcast",
                   time.buffer = 20,
                   silent = T)
```

## Vertical profiles

The `process_all()` function returns a list of four data frames: `loess_eval`, `atten_values`, `light_ratios`, and `resid_fit`.
```{r}
print(names(ebs))
```

`loess_eval` and `resid_fit` contain information about the fit of loess models fit between depth and log-transformed light, for each cast.
```{r}
print(head(ebs$loess_eval))
print(head(ebs$resid_fit))
```

`atten_values` contains instantaneous attenuation, by user-specified depth intervals, for each cast.
```{r}
print(head(ebs$atten_values))
```

`light_ratios` contains converted light measurements, for each depth bin and cast. 

## Read-in surface (deck) light data

