test2$date_time <- as.POSIXct(test2$date_time)
try.offsets <- seq(-8,8,0.5)
try.sum <- vector(length = length(try.offsets))
try.nrow <- vector(length = length(try.offsets))
try.cor <- vector(length = length(try.offsets))
for(i in 1:length(try.offsets)) {
test$ldate_time_offset <- test$ldate_time + try.offsets[i]*3600
test3 <- dplyr::inner_join(test, test2, by = c("ldate_time_offset" = "date_time"))
try.sum[i] <- sum(test3$ldepth-test3$depth)
try.nrow[i] <- nrow(test3)
try.cor[i] <- cor(test3$ldepth, test3$depth)
}
par(mfrow = c(2,2))
plot(try.offsets, abs(try.sum))
abline(h = 0)
plot(try.offsets, try.nrow)
plot(try.offsets, abs(try.sum)/try.nrow)
abline(h = 0)
plot(try.offsets, try.cor)
try.offsets[which.max(try.cor)]
try.cor[which.max(try.cor)]
try.offsets[which.max(try.cor)]
# Mk9 depth is the third column
test <- read.csv(file = "G:/RACE_LIGHT/LightData/Data/year_19/ebs/v_94/light.csv")
names(test) <- c("date", "time", "ldepth", "temp", "light", "cond", "ldate_time")
# test <- dplyr::select(test, ldate_time, ldepth)
test$ldate_time <- as.POSIXct(test$ldate_time)
test2 <- read.csv(file = "G:/RACE_LIGHT/LightData/Data/year_19/ebs/v_94/mbt.csv")
test2 <- dplyr::select(test2, date_time, depth)
test2$date_time <- as.POSIXct(test2$date_time)
# try.sum <- vector(length = length(try.offsets))
try.nrow <- vector(length = length(try.offsets))
try.cor <- vector(length = length(try.offsets))
for(i in 1:length(try.offsets)) {
test$ldate_time_offset <- test$ldate_time + try.offsets[i]*3600
test3 <- dplyr::inner_join(test, test2, by = c("ldate_time_offset" = "date_time"))
#try.sum[i] <- sum(test3$ldepth-test3$depth)
try.nrow[i] <- nrow(test3)
try.cor[i] <- cor(test3$ldepth, test3$depth)
}
try.cor[which.max(try.cor)]
try.offsets[which.max(try.cor)]
try.offsets[which.max(try.cor)]
rm(list = ls())
test <- read.csv(file = "G:/RACE_LIGHT/LightData/Data/year_19/ebs/v_94/light.csv")
names(test) <- c("date", "time", "ldepth", "temp", "light", "cond", "ldate_time")
# test <- dplyr::select(test, ldate_time, ldepth)
test$ldate_time <- as.POSIXct(test$ldate_time)
test2 <- read.csv(file = "G:/RACE_LIGHT/LightData/Data/year_19/ebs/v_94/mbt.csv")
test2 <- dplyr::select(test2, date_time, depth)
test2$date_time <- as.POSIXct(test2$date_time)
find_mk9_offset <- function(light, mbt, try.offsets = seq(-8,8,0.5)) {
# Mk9 depth is the third column
try.cor <- vector(length = length(try.offsets))
for(i in 1:length(try.offsets)) {
light$ldate_time_offset <- light$ldate_time + try.offsets[i]*3600
offset.df <- dplyr::inner_join(light, mbt, by = c("ldate_time_offset" = "date_time"))
try.cor[i] <- cor(offset.df$ldepth, offset.df$depth)
}
# par(mfrow = c(2,2))
# plot(try.offsets, abs(try.sum))
# abline(h = 0)
# plot(try.offsets, try.nrow)
# plot(try.offsets, abs(try.sum)/try.nrow)
# abline(h = 0)
# plot(try.offsets, try.cor)
#
light$ldate_time <- light$ldate_time
print(paste0("Offset for Mk9 is " , try.offsets[which.max(try.cor)], "hrs, with correlation between Mk9 and MBT depth of ", try.cor[which.max(try.cor)], "."))
return(try.offsets[which.max(try.cor)])
}
find_mk9_offset(light = test, mbt = test2)
find_mk9_offset <- function(light, mbt, try.offsets = seq(-8,8,0.5)) {
# Mk9 depth is the third column
try.cor <- vector(length = length(try.offsets))
for(i in 1:length(try.offsets)) {
light$ldate_time_offset <- light$ldate_time + try.offsets[i]*3600
offset.df <- dplyr::inner_join(light, mbt, by = c("ldate_time_offset" = "date_time"))
try.cor[i] <- cor(offset.df$ldepth, offset.df$depth)
}
# par(mfrow = c(2,2))
# plot(try.offsets, abs(try.sum))
# abline(h = 0)
# plot(try.offsets, try.nrow)
# plot(try.offsets, abs(try.sum)/try.nrow)
# abline(h = 0)
# plot(try.offsets, try.cor)
#
light$ldate_time <- light$ldate_time
print(paste0("Offset for Mk9 is " , try.offsets[which.max(try.cor)], "hrs, with correlation between Mk9 and MBT depth of ", try.cor[which.max(try.cor)], "."))
return(light)
}
broh <- find_mk9_offset(light = test, mbt = test2)
head(broh)
head(test)
find_mk9_offset <- function(light, mbt, try.offsets = seq(-8,8,0.5)) {
# Mk9 depth is the third column
try.cor <- vector(length = length(try.offsets))
for(i in 1:length(try.offsets)) {
light$ldate_time_offset <- light$ldate_time + try.offsets[i]*3600
offset.df <- dplyr::inner_join(light, mbt, by = c("ldate_time_offset" = "date_time"))
try.cor[i] <- cor(offset.df$ldepth, offset.df$depth)
}
# par(mfrow = c(2,2))
# plot(try.offsets, abs(try.sum))
# abline(h = 0)
# plot(try.offsets, try.nrow)
# plot(try.offsets, abs(try.sum)/try.nrow)
# abline(h = 0)
# plot(try.offsets, try.cor)
#
light$ldate_time <- light$ldate_time + try.offsets[which.max(try.cor)]*3600
print(paste0("Offset for Mk9 is " , try.offsets[which.max(try.cor)], "hrs, with correlation between Mk9 and MBT depth of ", try.cor[which.max(try.cor)], "."))
return(light)
}
broh <- find_mk9_offset(light = test, mbt = test2)
head(test)
head(broh)
find_mk9_offset <- function(light, mbt, try.offsets = seq(-8,8,0.5)) {
# Mk9 depth is the third column
try.cor <- vector(length = length(try.offsets))
for(i in 1:length(try.offsets)) {
light$ldate_time_offset <- light$ldate_time + try.offsets[i]*3600
offset.df <- dplyr::inner_join(light, mbt, by = c("ldate_time_offset" = "date_time"))
try.cor[i] <- cor(offset.df$ldepth, offset.df$depth)
}
light <- light[,-which(colnames(light) == "ldate_time_offset")]
light$ldate_time <- light$ldate_time + try.offsets[which.max(try.cor)]*3600
print(paste0("Offset for Mk9 is " , try.offsets[which.max(try.cor)], "hrs, with correlation between Mk9 and MBT depth of ", try.cor[which.max(try.cor)], "."))
return(light)
}
broh <- find_mk9_offset(light = test, mbt = test2)
head(test)
head(broh)
test <- read.csv(file = "G:/RACE_LIGHT/LightData/Data/year_19/ebs/v_94/light.csv")
# test <- read.csv(file = "G:/RACE_LIGHT/LightData/Data/year_19/ebs/v_94/light.csv")
# names(test) <- c("date", "time", "ldepth", "temp", "light", "cond", "ldate_time")
# # test <- dplyr::select(test, ldate_time, ldepth)
# test$ldate_time <- as.POSIXct(test$ldate_time)
#
# test2 <- read.csv(file = "G:/RACE_LIGHT/LightData/Data/year_19/ebs/v_94/mbt.csv")
# test2 <- dplyr::select(test2, date_time, depth)
# test2$date_time <- as.POSIXct(test2$date_time)
head(test)
?lm
find_mk9_offset <- function(light, mbt, try.offsets = seq(-8,8,0.5), results.file = NULL) {
# Initilize vector to store correlations from different offsets
try.cor <- vector(length = length(try.offsets))
# Loop through offsets
for(i in 1:length(try.offsets)) {
# Create offset to try
light$ldate_time_offset <- light$ldate_time + try.offsets[i]*3600
offset.df <- dplyr::inner_join(light, mbt, by = c("ldate_time_offset" = "date_time"))
try.cor[i] <- cor(offset.df$ldepth, offset.df$depth)
}
print(paste0("Offset for Mk9 is " , try.offsets[which.max(try.cor)], "hrs, with correlation between Mk9 and MBT depth of ", try.cor[which.max(try.cor)], "."))
# Remove try column
light <- light[,-which(colnames(light) == "ldate_time_offset")]
# Transform based on the best offset
light$ldate_time <- light$ldate_time + try.offsets[which.max(try.cor)]*3600
# Write offset and correlation to a file
if(!is.null(results.file)) {
write.table(x = Sys.Date(), file = results.file)
}
return(light)
}
dir()
seantools::root.dir()
dir(seantools::root.dir())
find_mk9_offset <- function(light, mbt, try.offsets = seq(-8,8,0.5), results.file = NULL) {
# Initilize vector to store correlations from different offsets
try.cor <- vector(length = length(try.offsets))
# Loop through offsets
for(i in 1:length(try.offsets)) {
# Create offset to try
light$ldate_time_offset <- light$ldate_time + try.offsets[i]*3600
offset.df <- dplyr::inner_join(light, mbt, by = c("ldate_time_offset" = "date_time"))
try.cor[i] <- cor(offset.df$ldepth, offset.df$depth)
}
print(paste0("Offset for Mk9 is " , try.offsets[which.max(try.cor)], "hrs, with correlation between Mk9 and MBT depth of ", try.cor[which.max(try.cor)], "."))
# Remove try column
light <- light[,-which(colnames(light) == "ldate_time_offset")]
# Transform based on the best offset
light$ldate_time <- light$ldate_time + try.offsets[which.max(try.cor)]*3600
# Write offset and correlation to a file
if(!is.null(results.file)) {
write.table(x = Sys.Date(), file = results.file)
}
return(light)
}
find_mk9_offset(light = test, mbt = test2, results.file = paste0(seantools::root.dir(), "afsc/test.txt"))
find_mk9_offset <- function(light, mbt, try.offsets = seq(-8,8,0.5), results.file = NULL) {
# Initilize vector to store correlations from different offsets
try.cor <- vector(length = length(try.offsets))
# Loop through offsets
for(i in 1:length(try.offsets)) {
print(i)
# Create offset to try
light$ldate_time_offset <- light$ldate_time + try.offsets[i]*3600
offset.df <- dplyr::inner_join(light, mbt, by = c("ldate_time_offset" = "date_time"))
try.cor[i] <- cor(offset.df$ldepth, offset.df$depth)
}
print(paste0("Offset for Mk9 is " , try.offsets[which.max(try.cor)], "hrs, with correlation between Mk9 and MBT depth of ", try.cor[which.max(try.cor)], "."))
# Remove try column
light <- light[,-which(colnames(light) == "ldate_time_offset")]
# Transform based on the best offset
light$ldate_time <- light$ldate_time + try.offsets[which.max(try.cor)]*3600
# Write offset and correlation to a file
if(!is.null(results.file)) {
write.table(x = Sys.Date(), file = results.file)
}
return(light)
}
find_mk9_offset(light = test, mbt = test2, results.file = paste0(seantools::root.dir(), "afsc/test.txt"))
print(head(test))
#'
#' @param light Data frame containing Mk9 data. Must include columns: ldate_time (POSIXct), ldepth (numeric)
#' @param mbt Data frame containing MBT data. Must include columns: date_time (POSIXct), depth (numeric)
#' @param try.offsets A vector of offsets to try. Default is seq(-8,8,0.5)
#' @param results.dir Character vector specifying the output directory where the offset and correlation between Mk9 and MBT depths are stored.
#'
#' @return The input light data frame with date_time adjusted according to the offset.
#'
#' @author Sean Rohan \email{sean.rohan@@noaa.gov}
#'
names(test) <- c("date", "time", "depth", "h", "b", "c", "ldate_time")
find_mk9_offset <- function(light, mbt, try.offsets = seq(-8,8,0.5), results.file = NULL) {
# Initilize vector to store correlations from different offsets
try.cor <- vector(length = length(try.offsets))
# Loop through offsets
for(i in 1:length(try.offsets)) {
print(i)
# Create offset to try
light$ldate_time_offset <- light$ldate_time + try.offsets[i]*3600
offset.df <- dplyr::inner_join(light, mbt, by = c("ldate_time_offset" = "date_time"))
try.cor[i] <- cor(offset.df$ldepth, offset.df$depth)
}
print(paste0("Offset for Mk9 is " , try.offsets[which.max(try.cor)], "hrs, with correlation between Mk9 and MBT depth of ", try.cor[which.max(try.cor)], "."))
# Remove try column
light <- light[,-which(colnames(light) == "ldate_time_offset")]
# Transform based on the best offset
light$ldate_time <- light$ldate_time + try.offsets[which.max(try.cor)]*3600
# Write offset and correlation to a file
if(!is.null(results.file)) {
write.table(x = Sys.Date(), file = results.file)
}
return(light)
}
find_mk9_offset(light = test, mbt = test2, results.file = paste0(seantools::root.dir(), "afsc/test.txt"))
str(test)
test$ldate_time <- as.POSIXct(test$ldate_time)
str(test2)
find_mk9_offset <- function(light, mbt, try.offsets = seq(-8,8,0.5), results.file = NULL) {
# Initilize vector to store correlations from different offsets
try.cor <- vector(length = length(try.offsets))
# Loop through offsets
for(i in 1:length(try.offsets)) {
print(i)
# Create offset to try
light$ldate_time_offset <- light$ldate_time + try.offsets[i]*3600
offset.df <- dplyr::inner_join(light, mbt, by = c("ldate_time_offset" = "date_time"))
try.cor[i] <- cor(offset.df$ldepth, offset.df$depth)
}
print(paste0("Offset for Mk9 is " , try.offsets[which.max(try.cor)], "hrs, with correlation between Mk9 and MBT depth of ", try.cor[which.max(try.cor)], "."))
# Remove try column
light <- light[,-which(colnames(light) == "ldate_time_offset")]
# Transform based on the best offset
light$ldate_time <- light$ldate_time + try.offsets[which.max(try.cor)]*3600
# Write offset and correlation to a file
if(!is.null(results.file)) {
write.table(x = Sys.Date(), file = results.file)
}
return(light)
}
find_mk9_offset(light = test, mbt = test2, results.file = paste0(seantools::root.dir(), "afsc/test.txt"))
#'
#' @param light Data frame containing Mk9 data. Must include columns: ldate_time (POSIXct), ldepth (numeric)
#' @param mbt Data frame containing MBT data. Must include columns: date_time (POSIXct), depth (numeric)
#' @param try.offsets A vector of offsets to try. Default is seq(-8,8,0.5)
#' @param results.dir Character vector specifying the output directory where the offset and correlation between Mk9 and MBT depths are stored.
#'
#' @return The input light data frame with date_time adjusted according to the offset.
#'
#' @author Sean Rohan \email{sean.rohan@@noaa.gov}
#'
names(test) <- c("date", "time", "ldepth", "h", "b", "c", "ldate_time")
find_mk9_offset <- function(light, mbt, try.offsets = seq(-8,8,0.5), results.file = NULL) {
# Initilize vector to store correlations from different offsets
try.cor <- vector(length = length(try.offsets))
# Loop through offsets
for(i in 1:length(try.offsets)) {
print(i)
# Create offset to try
light$ldate_time_offset <- light$ldate_time + try.offsets[i]*3600
offset.df <- dplyr::inner_join(light, mbt, by = c("ldate_time_offset" = "date_time"))
try.cor[i] <- cor(offset.df$ldepth, offset.df$depth)
}
print(paste0("Offset for Mk9 is " , try.offsets[which.max(try.cor)], "hrs, with correlation between Mk9 and MBT depth of ", try.cor[which.max(try.cor)], "."))
# Remove try column
light <- light[,-which(colnames(light) == "ldate_time_offset")]
# Transform based on the best offset
light$ldate_time <- light$ldate_time + try.offsets[which.max(try.cor)]*3600
# Write offset and correlation to a file
if(!is.null(results.file)) {
write.table(x = Sys.Date(), file = results.file)
}
return(light)
}
find_mk9_offset(light = test, mbt = test2, results.file = paste0(seantools::root.dir(), "afsc/test.txt"))
?writeChar
?file
find_mk9_offset <- function(light, mbt, try.offsets = seq(-8,8,0.5), results.file = NULL) {
# Initilize vector to store correlations from different offsets
try.cor <- vector(length = length(try.offsets))
# Loop through offsets
for(i in 1:length(try.offsets)) {
print(i)
# Create offset to try
light$ldate_time_offset <- light$ldate_time + try.offsets[i]*3600
offset.df <- dplyr::inner_join(light, mbt, by = c("ldate_time_offset" = "date_time"))
try.cor[i] <- cor(offset.df$ldepth, offset.df$depth)
}
print(paste0("Offset for Mk9 is " , try.offsets[which.max(try.cor)], " hrs, with correlation between Mk9 and MBT depth of ", try.cor[which.max(try.cor)], "."))
# Remove try column
light <- light[,-which(colnames(light) == "ldate_time_offset")]
# Transform based on the best offset
light$ldate_time <- light$ldate_time + try.offsets[which.max(try.cor)]*3600
# Write offset and correlation to a file
if(!is.null(results.file)) {
fconn <- file(results.file)
writeLines(c(Sys.Date(),
paste0("Offset: " , try.offsets[which.max(try.cor)], " hrs"),
paste0("Corr: ", try.cor[which.max(try.cor)])),fconn)
close(fconn)
}
return(light)
}
find_mk9_offset(light = test, mbt = test2, results.file = paste0(seantools::root.dir(), "afsc/test.txt"))
find_mk9_offset <- function(light, mbt, try.offsets = seq(-8,8,0.5), results.file = NULL) {
# Initilize vector to store correlations from different offsets
try.cor <- vector(length = length(try.offsets))
# Loop through offsets
for(i in 1:length(try.offsets)) {
# Create offset to try
light$ldate_time_offset <- light$ldate_time + try.offsets[i]*3600
offset.df <- dplyr::inner_join(light, mbt, by = c("ldate_time_offset" = "date_time"))
try.cor[i] <- cor(offset.df$ldepth, offset.df$depth)
}
print(paste0("Offset for Mk9 is " , try.offsets[which.max(try.cor)], " hrs, with correlation between Mk9 and MBT depth of ", try.cor[which.max(try.cor)], "."))
# Remove try column
light <- light[,-which(colnames(light) == "ldate_time_offset")]
# Transform based on the best offset
light$ldate_time <- light$ldate_time + try.offsets[which.max(try.cor)]*3600
# Write offset and correlation to a file
if(!is.null(results.file)) {
fconn <- file(results.file)
writeLines(c(as.character(Sys.Date()),
paste0("Offset: " , try.offsets[which.max(try.cor)], " hrs"),
paste0("Corr: ", try.cor[which.max(try.cor)])),fconn)
close(fconn)
}
return(light)
}
find_mk9_offset(light = test, mbt = test2, results.file = paste0(seantools::root.dir(), "afsc/test.txt"))
find_mk9_offset <- function(light, mbt, try.offsets = seq(-8,8,0.5), results.file = NULL) {
if(!(c("ldate_time", "ldepth") %in% names(light))) {
stop("find_mk9_offset: Columns named ldate_time and/or ldepth are missing from the light argument.")
}
if(!(c("date_time", "depth") %in% names(light))) {
stop("find_mk9_offset: Columns named date_time and/or depth are missing from the mbt argument.")
}
# Initilize vector to store correlations from different offsets
try.cor <- vector(length = length(try.offsets))
# Loop through offsets
for(i in 1:length(try.offsets)) {
# Create offset to try
light$ldate_time_offset <- light$ldate_time + try.offsets[i]*3600
offset.df <- dplyr::inner_join(light, mbt, by = c("ldate_time_offset" = "date_time"))
try.cor[i] <- cor(offset.df$ldepth, offset.df$depth)
}
print(paste0("Offset for Mk9 is " , try.offsets[which.max(try.cor)], " hrs, with correlation between Mk9 and MBT depth of ", try.cor[which.max(try.cor)], "."))
# Remove try column
light <- light[,-which(colnames(light) == "ldate_time_offset")]
# Transform based on the best offset
light$ldate_time <- light$ldate_time + try.offsets[which.max(try.cor)]*3600
# Write offset and correlation to a file
if(!is.null(results.file)) {
fconn <- file(results.file)
writeLines(c(as.character(Sys.Date()),
paste0("Offset: " , try.offsets[which.max(try.cor)], " hrs"),
paste0("Corr: ", try.cor[which.max(try.cor)])),fconn)
close(fconn)
}
return(light)
}
find_mk9_offset(light = data.frame(x = 1, bro = 2), mbt = light = data.frame(x = 1, bro = 2))
find_mk9_offset(light = data.frame(x = 1, bro = 2), mbt = data.frame(x = 1, bro = 2))
find_mk9_offset(light = test, mbt = test2, results.file = paste0(seantools::root.dir(), "afsc/test.txt"))
names(mbt)
names(test2)
find_mk9_offset <- function(light, mbt, try.offsets = seq(-8,8,0.5), results.file = NULL) {
if(!(c("ldate_time", "ldepth") %in% names(light))) {
stop("find_mk9_offset: Columns named ldate_time and/or ldepth are missing from the light argument.")
}
if(!(c("date_time", "depth") %in% names(mbt))) {
stop("find_mk9_offset: Columns named date_time and/or depth are missing from the mbt argument.")
}
# Initilize vector to store correlations from different offsets
try.cor <- vector(length = length(try.offsets))
# Loop through offsets
for(i in 1:length(try.offsets)) {
# Create offset to try
light$ldate_time_offset <- light$ldate_time + try.offsets[i]*3600
offset.df <- dplyr::inner_join(light, mbt, by = c("ldate_time_offset" = "date_time"))
try.cor[i] <- cor(offset.df$ldepth, offset.df$depth)
}
print(paste0("Offset for Mk9 is " , try.offsets[which.max(try.cor)], " hrs, with correlation between Mk9 and MBT depth of ", try.cor[which.max(try.cor)], "."))
# Remove try column
light <- light[,-which(colnames(light) == "ldate_time_offset")]
# Transform based on the best offset
light$ldate_time <- light$ldate_time + try.offsets[which.max(try.cor)]*3600
# Write offset and correlation to a file
if(!is.null(results.file)) {
fconn <- file(results.file)
writeLines(c(as.character(Sys.Date()),
paste0("Offset: " , try.offsets[which.max(try.cor)], " hrs"),
paste0("Corr: ", try.cor[which.max(try.cor)])),fconn)
close(fconn)
}
return(light)
}
find_mk9_offset(light = test, mbt = test2, results.file = paste0(seantools::root.dir(), "afsc/test.txt"))
?contains
?%in%
?all
find_mk9_offset <- function(light, mbt, try.offsets = seq(-8,8,0.5), results.file = NULL) {
if(!(("ldate_time" %in% names(light)) & ("ldepth" %in% names(light)))) {
stop("find_mk9_offset: Columns named ldate_time and/or ldepth are missing from the light argument.")
}
if(!(("date_time" %in% names(light)) & ("depth" %in% names(mbt)))) {
stop("find_mk9_offset: Columns named date_time and/or depth are missing from the mbt argument.")
}
# Initilize vector to store correlations from different offsets
try.cor <- vector(length = length(try.offsets))
# Loop through offsets
for(i in 1:length(try.offsets)) {
# Create offset to try
light$ldate_time_offset <- light$ldate_time + try.offsets[i]*3600
offset.df <- dplyr::inner_join(light, mbt, by = c("ldate_time_offset" = "date_time"))
try.cor[i] <- cor(offset.df$ldepth, offset.df$depth)
}
print(paste0("Offset for Mk9 is " , try.offsets[which.max(try.cor)], " hrs, with correlation between Mk9 and MBT depth of ", try.cor[which.max(try.cor)], "."))
# Remove try column
light <- light[,-which(colnames(light) == "ldate_time_offset")]
# Transform based on the best offset
light$ldate_time <- light$ldate_time + try.offsets[which.max(try.cor)]*3600
# Write offset and correlation to a file
if(!is.null(results.file)) {
fconn <- file(results.file)
writeLines(c(as.character(Sys.Date()),
paste0("Offset: " , try.offsets[which.max(try.cor)], " hrs"),
paste0("Corr: ", try.cor[which.max(try.cor)])),fconn)
close(fconn)
}
return(light)
}
find_mk9_offset(light = test, mbt = test2, results.file = paste0(seantools::root.dir(), "afsc/test.txt"))
find_mk9_offset <- function(light, mbt, try.offsets = seq(-8,8,0.5), results.file = NULL) {
if(!(("ldate_time" %in% names(light)) & ("ldepth" %in% names(light)))) {
stop("find_mk9_offset: Columns named ldate_time and/or ldepth are missing from the light argument.")
}
if(!(("date_time" %in% names(mbt)) & ("depth" %in% names(mbt)))) {
stop("find_mk9_offset: Columns named date_time and/or depth are missing from the mbt argument.")
}
# Initilize vector to store correlations from different offsets
try.cor <- vector(length = length(try.offsets))
# Loop through offsets
for(i in 1:length(try.offsets)) {
# Create offset to try
light$ldate_time_offset <- light$ldate_time + try.offsets[i]*3600
offset.df <- dplyr::inner_join(light, mbt, by = c("ldate_time_offset" = "date_time"))
try.cor[i] <- cor(offset.df$ldepth, offset.df$depth)
}
print(paste0("Offset for Mk9 is " , try.offsets[which.max(try.cor)], " hrs, with correlation between Mk9 and MBT depth of ", try.cor[which.max(try.cor)], "."))
# Remove try column
light <- light[,-which(colnames(light) == "ldate_time_offset")]
# Transform based on the best offset
light$ldate_time <- light$ldate_time + try.offsets[which.max(try.cor)]*3600
# Write offset and correlation to a file
if(!is.null(results.file)) {
fconn <- file(results.file)
writeLines(c(as.character(Sys.Date()),
paste0("Offset: " , try.offsets[which.max(try.cor)], " hrs"),
paste0("Corr: ", try.cor[which.max(try.cor)])),fconn)
close(fconn)
}
return(light)
}
find_mk9_offset(light = test, mbt = test2, results.file = paste0(seantools::root.dir(), "afsc/test.txt"))
rm(list = ls())
library(TLUtilities)
require(TLUtilities)
?find_mk9_offset
?trawllight::calculate_attenuation
library(TLUtilities)
library(TLUtilities)
install.packages("roxygen2")
library(TLUtilities)
require(roxygen2)
roxygenise(TLUtilieis)
library(TLUtilities)
library(TLUtilities)
