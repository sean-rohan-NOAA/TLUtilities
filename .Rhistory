test2$dbin <- findInterval(test2$cdepth, seq(0, max(test2$cdepth), 2), rightmost.closed = T, left.open = F) * 2 - 2/2
test3 <- aggregate(trans_llight ~ vessel + cruise + haul + dbin, data = test2, FUN = median)
if(nrow(test3) > 4) {
test3.las2 <- loess.as2(x = test3$dbin, y = log10(test3$trans_llight))
test4 <- filter_stepwise(test2, depth.col = "cdepth", light.col = "trans_llight", agg.fun = median)
test4.las2 <- loess.as2(x = test4$cdepth, y = log10(test4$trans_llight))
plot1 <- ggplot() +
geom_point(data = testA, aes(y = cdepth, x = log10(trans_llight)), color = "black", size = rel(3), alpha = 0.5) +
geom_point(data = test2, aes(y = dbin, x = log10(trans_llight)), color = "red") +
scale_y_reverse(name = "Depth") +
scale_x_continuous(name = "log10(light)") +
ggtitle(haulz[i])
plot2 <- ggplot() +
geom_point(data = test4, aes(y = cdepth, x = log10(trans_llight)), color = "blue", size = rel(3), alpha = 0.5) +
geom_point(data = test3, aes(y = dbin, x = log10(trans_llight)), color = "red") +
geom_path(aes(y = seq(min(test3$dbin), max(test3$dbin), 0.2), x = predict(test3.las2, newdata = seq(min(test3$dbin), max(test3$dbin), 0.2))), color = "red") +
geom_path(aes(y = seq(min(test4$cdepth), max(test4$cdepth), 0.2), x = predict(test4.las2, newdata = seq(min(test4$cdepth), max(test4$cdepth), 0.2))), color = "blue", linetype = 2) +
scale_y_reverse(name = "Depth") +
scale_x_continuous(name = "log10(light)") +
ggtitle(" ")
direct.orient.sub <- subset(direct.orient, haul == haulz[i] & (cruise == 200901 & vessel == 89))
indirect.orient.sub <- subset(indirect.orient, haul == haulz[i] & (cruise == 200901 & vessel == 89))
if(nrow(direct.orient.sub) >= 1) {
direct.orient.sub <- subset(direct.orient.sub, cdepth == min(direct.orient.sub$cdepth))
plot3 <- ggplot() + geom_density(aes(x = direct.orient$direct_residual[direct.orient$cdepth == min(direct.orient.sub$cdepth)])) +
geom_vline(aes(xintercept = direct.orient.sub$direct_residual[1]), color = "red", linetype = 2) +
ggtitle(paste0("Quality: ", direct.orient.sub$quality, ", Min. Depth: ", min(direct.orient.sub$cdepth))) +
scale_x_continuous(name = "Direct residual") +
scale_y_continuous(name = "Density")
} else {
plot3 <- ggplot() + geom_text(aes(x = 1, y = 1, label = "Minimum depth > 5 m")) + ggtitle(" ")
}
if(nrow(indirect.orient.sub) >= 1) {
indirect.orient.sub <- subset(indirect.orient.sub, cdepth == min(indirect.orient.sub$cdepth))
plot4 <- ggplot() + geom_density(aes(x = indirect.orient$light_residual[indirect.orient$cdepth == min(indirect.orient.sub$cdepth)])) +
geom_vline(aes(xintercept = indirect.orient.sub$light_residual[1]), color = "red", linetype = 2) +
scale_x_continuous(name = "Indirect residual") +
scale_y_continuous(name = "Density") + ggtitle(" ")
} else {
plot4 <- ggplot() + geom_text(aes(x = 1, y = 1, label = "Minimum depth > 5 m")) + ggtitle(" ")
}
print(grid.arrange(plot1, plot2, plot3, plot4, nrow = 2))
stepwise <- c(stepwise, mean(resid(test4.las2)^2))
mod_fit <- c(mod_fit, mean(resid(test3.las2)^2))
}
}
dev.off()
Sys.info()
getwd()
dir("../")
dir("../testing_space")
setwd("../testing_space")
knitr::opts_chunk$set(echo = TRUE)
setwd("../testing_space")
getwd()
?knitr::opts_chunk
knitr::opts_chunk$set(echo = TRUE,
root.dir = "../testing_space")
library(trawllight)
library(TLUtilities)
install.packages("C:/Users/seanr/Downloads/TLUtilities-master.zip", repos = NULL, type = "win.binary")
library(trawllight)
library(TLUtilities)
library(TLUtilitie-master)
library(TLUtiliites-master)
library("TLUtiliites-master"")
library("TLUtiliites-master")
library(trawllight)
library("TLUtiliites-master")
library(trawllight)
library("TLUtilites-master")
library("TLUtilites")
library(trawllight)
library("TLUtilities")
library("TLUtilities-master")
library("TLUtilities-master")
library(trawllight)
library("TLUtilities-master")
require(devtools)
devtools::install_github("sean-rohan/TLUtilities")
library(trawllight)
library(TLUtilities)
light.dir <- read.csv("./imports/directories.csv", stringsAsFactors = F, header = F)
knitr::opts_chunk$set(echo = TRUE,
root.dir = "../testing_space")
library(trawllight)
library(TLUtilities)
knitr::opts_chunk$set(echo = TRUE,
root.dir = "../testing_space")
library(trawllight)
library(TLUtilities)
getwd()
light.dir <- read.csv("./imports/directories.csv", stringsAsFactors = F, header = F)
knitr::opts_chunk$set(echo = TRUE,
root.dir = "../testing_space")
getwd()
library(trawllight)
library(TLUtilities)
getwd()
knitr::opts_chunk$set(echo = TRUE)
getwd()
library(trawllight)
library(TLUtilities)
library(trawllight)
library(TLUtilities)
light.dir <- read.csv("./imports/directories.csv", stringsAsFactors = F, header = F)
# Select EBS shelf directories
light.dir <- light.dir[which(grepl("ebs", light.dir[,1])),1]
light.dir[1:3]
light.dir <- read.csv("./imports/directories.csv", stringsAsFactors = F, header = F)
# Select EBS shelf directories
light.dir <- light.dir[which(grepl("ebs", light.dir[,1])),1]
light.dir[1:3]
names(ebs)
ebs <- process_all(dir.structure = light.dir[10:12],
cast.dir = "Downcast",
time.buffer = 20,
silent = T)
names(ebs)
head(ebs$loess_eval)
head(ebs$resid_fit)
head(ebs$atten_values)
head(ebs$light_ratios)
require(trawllight)
### Demonstrating alternative algorithms to smooth raw light data
require(trawllight)
require(castr)
require(devtools)
install_github("jiho/castr")
require(trawllight)
?tag_residuals_indirect
#
light.dir
light.dir[15]
# Correcting
dir(light.dir[15])
# Correcting
getwd()
# Correcting
dir("..")
# Correcting
dir("../testing_space/")
# Correcting
dir(paste0("../testing_space/", light.dir[15]))
light.dir[15]
setwd("../testing_space/")
bbb <- read.csv(file = paste(light.dir[15], "\\deck1_1190097.csv", sep = ""), header = F)
head(bbb)
names(bbb) <- c("date", "time", "cdepth", "temp", "clight")
bbb$datetime <- paste(bbb$date, bbb$time)
bbb$datetime <- as.POSIXct(bbb$datetime, format = "%m/%d/%Y %H:%M:%S", tz = "America/Anchorage")
ggplot(data = bbb, aes(x = datetime, y = clight)) + geom_path()
require(ggplot2)
ggplot(data = bbb, aes(x = datetime, y = clight)) + geom_path()
knitr::opts_chunk$set(echo = TRUE)
setwd("../testing_space/")
require(ggplot2)
bbb <- read.csv(file = paste(light.dir[15], "\\deck1_1190097.csv", sep = ""), header = F)
names(bbb) <- c("date", "time", "cdepth", "temp", "clight")
bbb$datetime <- paste(bbb$date, bbb$time)
bbb$datetime <- as.POSIXct(bbb$datetime, format = "%m/%d/%Y %H:%M:%S", tz = "America/Anchorage")
ggplot(data = bbb, aes(x = datetime, y = clight)) + geom_path()
setwd("../testing_space/")
require(ggplot2)
bbb <- read.csv(file = paste0(light.dir[5], "\\deck1_0490940.csv"), header = F)
names(bbb) <- c("date", "time", "cdepth", "temp", "clight")
bbb$datetime <- paste(bbb$date, bbb$time)
bbb$datetime <- as.POSIXct(bbb$datetime, format = "%m/%d/%Y %H:%M:%S", tz = "America/Anchorage")
ggplot(data = bbb, aes(x = datetime, y = clight)) + geom_path()
knitr::opts_chunk$set(echo = TRUE)
setwd("../testing_space/")
require(ggplot2)
bbb <- read.csv(file = paste0(light.dir[5], "\\deck1_0490940.csv"), header = F)
names(bbb) <- c("date", "time", "cdepth", "temp", "clight")
bbb$datetime <- paste(bbb$date, bbb$time)
bbb$datetime <- as.POSIXct(bbb$datetime, format = "%m/%d/%Y %H:%M:%S", tz = "America/Anchorage")
ggplot(data = bbb, aes(x = datetime, y = clight)) + geom_path()
require(fishmethods)
# Vessel/cruise of interest
ccc <- subset(haul_time_position, vessel == 134 & cruise == 200601)
dir()
dir("./data")
require(fishmethods)
haul_time_position <- readRDS("./data/haul_time_position.rds")
# Vessel/cruise of interest
ccc <- subset(haul_time_position, vessel == 134 & cruise == 200601)
# Only the first haul of the day
ccc <- subset(ccc, haul %in% aggregate(haul ~ yday(ccc$start_time), data = ccc, FUN = min)[,2])
require(fishmethods)
require(lubridate)
haul_time_position <- readRDS("./data/haul_time_position.rds")
# Vessel/cruise of interest
ccc <- subset(haul_time_position, vessel == 134 & cruise == 200601)
# Only the first haul of the day
ccc <- subset(ccc, haul %in% aggregate(haul ~ yday(ccc$start_time), data = ccc, FUN = min)[,2])
# Calculate sunrise time
ccc <- cbind(ccc,
fishmethods::astrocalc4r(day = day(ccc$start_time),
month = month(ccc$start_time),
year = year(ccc$start_time),
hour = hour(ccc$start_time) + minute(ccc$start_time)/60,
timezone = rep(-8, nrow(ccc)),
lat = ccc$start_latitude,
lon = ccc$start_longitude,
seaorland = "maritime"))
# Convert sunrise time to POSIXct
ccc$sunrise2 <- as.POSIXct(paste(date(ccc$start_time), " ", floor(ccc$sunrise), ":", floor(ccc$sunrise%%1 * 60), ":", floor((ccc$sunrise%%1 * 60)%%1*60), sep = ""), tz = "America/Anchorage")
head(ccc)
# Plot sunrise times over light meaurements.
ggplot() + geom_path(data = bbb, aes(x = datetime, y = clight)) +
geom_vline(data = ccc, aes(xintercept = sunrise2), col = "red", linetype = 2)
ggplot() + geom_path(data = subset(bbb, month(datetime) <= 7 & day(datetime) < 15), aes(x = datetime, y = clight)) +
geom_vline(data = subset(ccc, month(sunrise2) <= 7 & day(sunrise2) < 15), aes(xintercept = sunrise2), col = "red", linetype = 2)
ggplot() + geom_path(data = subset(bbb, month(datetime) >= 7 & day(datetime) < 15), aes(x = datetime, y = clight)) +
geom_vline(data = subset(ccc, month(sunrise2) >= 7 & day(sunrise2) < 15), aes(xintercept = sunrise2), col = "red", linetype = 2)
ggplot() + geom_path(data = subset(bbb, month(datetime) == 7 & day(datetime) < 15), aes(x = datetime, y = clight)) +
geom_vline(data = subset(ccc, month(sunrise2) == 7 & day(sunrise2) < 15), aes(xintercept = sunrise2), col = "red", linetype = 2)
ggplot() + geom_path(data = subset(bbb, month(datetime) >= 7 & day(datetime) > 5), aes(x = datetime - 12 * 3600, y = clight)) +
geom_vline(data = subset(ccc, month(sunrise2) >= 7 & day(sunrise2) > 5), aes(xintercept = sunrise2), col = "red", linetype = 2)
light.dir[5]
paste0(light.dir[5], "\\deck1_0490940.csv")
getwd
getwd()
dir("..")
getwd()
knit_with_parameters('C:/Users/seanr/OneDrive/afsc/Light data processing/TLUtilities/vignettes/surface_errors.Rmd')
?knitr
dir()
setwd("C:/Users/seanr/OneDrive/afsc/Light data processing/TLUtilities")
dir()
knit(input = "./vignettes/surface_errors.Rmd", output = "./vignettes/surface_errors.md")
knitr::knit(input = "./vignettes/surface_errors.Rmd", output = "./vignettes/surface_errors.md")
getwd()
knitr::knit(input = "./vignettes/surface_errors.Rmd", output = "./vignettes/surface_errors.md")
knitr::knit(input = "./vignettes/surface_errors.Rmd", output = "./vignettes/surface_errors.md")
?knit
knitr::knit(input = "./vignettes/surface_errors.Rmd", output = "./vignettes/surface_errors.md")
getwd()
setwd("../testing_space/")
dir()
light.dir
light.dir[22]
dir(light.dir[22])
bbb <- read.csv(file = paste0(light.dir[22], "\\deck1_0990424.csv"), header = F)
head(bbb)
names(bbb) <- c("date", "time", "cdepth", "temp", "clight")
bbb$datetime <- paste(bbb$date, bbb$time)
bbb$datetime <- as.POSIXct(bbb$datetime, format = "%m/%d/%Y %H:%M:%S", tz = "America/Anchorage")
ggplot(data = bbb, aes(x = datetime, y = clight)) + geom_path()
# Using astrocalc4r, I find the sunrise time for the latitude and longitude for the first haul of every day.
ccc <- subset(haul_time_position, vessel == 94 & cruise == 201401)
ccc <- subset(ccc, haul %in% aggregate(haul ~ yday(ccc$start_time), data = ccc, FUN = min)[,2])
ccc <- cbind(ccc,
astrocalc4r(day = day(ccc$start_time),
month = month(ccc$start_time),
year = year(ccc$start_time),
hour = hour(ccc$start_time) + minute(ccc$start_time)/60,
timezone = rep(-8, nrow(ccc)),
lat = ccc$start_latitude,
lon = ccc$start_longitude,
seaorland = "maritime"))
ccc$sunrise2 <- as.POSIXct(paste(date(ccc$start_time), " ", floor(ccc$sunrise), ":", floor(ccc$sunrise%%1 * 60), ":", floor((ccc$sunrise%%1 * 60)%%1*60), sep = ""), tz = "America/Anchorage")
ggplot() + geom_path(data = bbb, aes(x = datetime, y = clight)) +
geom_vline(data = ccc, aes(xintercept = sunrise2), col = "red", linetype = 2)
ggplot() + geom_path(data = subset(bbb, month(datetime) < 7), aes(x = datetime, y = clight)) +
geom_vline(data = subset(ccc, month(datetime) < 7), aes(xintercept = sunrise2), col = "red", linetype = 2)
ggplot() + geom_path(data = subset(bbb, month(datetime) < 7), aes(x = datetime, y = clight)) +
geom_vline(data = subset(ccc, month(sunrise2) < 7), aes(xintercept = sunrise2), col = "red", linetype = 2)
light.dir[22]
light.dir
dir(light.dir[21])
head(ccc)
dir(light.dir[21])
#bbb <- read.csv(file = paste0(light.dir[22], "\\deck1_0990424.csv"), header = F)
bbb <- read.csv(file = paste0(light.dir[21], "\\deck1_1190403.csv"), header = F)
head(bbb)
names(bbb) <- c("date", "time", "cdepth", "temp", "clight")
bbb$datetime <- paste(bbb$date, bbb$time)
bbb$datetime <- as.POSIXct(bbb$datetime, format = "%m/%d/%Y %H:%M:%S", tz = "America/Anchorage")
ggplot(data = bbb, aes(x = datetime, y = clight)) + geom_path()
# Using astrocalc4r, I find the sunrise time for the latitude and longitude for the first haul of every day.
#ccc <- subset(haul_time_position, vessel == 94 & cruise == 201401)
ccc <- subset(haul_time_position, vessel == 162 & cruise == 201401)
ccc <- subset(ccc, haul %in% aggregate(haul ~ yday(ccc$start_time), data = ccc, FUN = min)[,2])
ccc <- cbind(ccc,
astrocalc4r(day = day(ccc$start_time),
month = month(ccc$start_time),
year = year(ccc$start_time),
hour = hour(ccc$start_time) + minute(ccc$start_time)/60,
timezone = rep(-8, nrow(ccc)),
lat = ccc$start_latitude,
lon = ccc$start_longitude,
seaorland = "maritime"))
ccc$sunrise2 <- as.POSIXct(paste(date(ccc$start_time), " ", floor(ccc$sunrise), ":", floor(ccc$sunrise%%1 * 60), ":", floor((ccc$sunrise%%1 * 60)%%1*60), sep = ""), tz = "America/Anchorage")
ggplot() + geom_path(data = subset(bbb, month(datetime) < 7), aes(x = datetime, y = clight)) +
geom_vline(data = subset(ccc, month(sunrise2) < 7), aes(xintercept = sunrise2), col = "red", linetype = 2)
mean(hour(ccc$start_time))
ggplot() + geom_path(data = subset(bbb, month(datetime) < 7), aes(x = datetime, y = clight)) +
geom_vline(data = subset(ccc, month(sunrise2) < 7), aes(xintercept = sunrise2), col = "red", linetype = 2)
bbb <- read.csv(file = paste0(light.dir[22], "\\deck1_0990424.csv"), header = F)
#bbb <- read.csv(file = paste0(light.dir[21], "\\deck1_1190403.csv"), header = F)
head(bbb)
names(bbb) <- c("date", "time", "cdepth", "temp", "clight")
bbb$datetime <- paste(bbb$date, bbb$time)
bbb$datetime <- as.POSIXct(bbb$datetime, format = "%m/%d/%Y %H:%M:%S", tz = "America/Anchorage")
ggplot(data = bbb, aes(x = datetime, y = clight)) + geom_path()
# Using astrocalc4r, I find the sunrise time for the latitude and longitude for the first haul of every day.
ccc <- subset(haul_time_position, vessel == 94 & cruise == 201401)
#ccc <- subset(haul_time_position, vessel == 162 & cruise == 201401)
ccc <- subset(ccc, haul %in% aggregate(haul ~ yday(ccc$start_time), data = ccc, FUN = min)[,2])
ccc <- cbind(ccc,
astrocalc4r(day = day(ccc$start_time),
month = month(ccc$start_time),
year = year(ccc$start_time),
hour = hour(ccc$start_time) + minute(ccc$start_time)/60,
timezone = rep(-8, nrow(ccc)),
lat = ccc$start_latitude,
lon = ccc$start_longitude,
seaorland = "maritime"))
ccc$sunrise2 <- as.POSIXct(paste(date(ccc$start_time), " ", floor(ccc$sunrise), ":", floor(ccc$sunrise%%1 * 60), ":", floor((ccc$sunrise%%1 * 60)%%1*60), sep = ""), tz = "America/Anchorage")
ggplot() + geom_path(data = subset(bbb, month(datetime) < 7), aes(x = datetime - 3600, y = clight)) +
geom_vline(data = subset(ccc, month(sunrise2) < 7), aes(xintercept = sunrise2), col = "red", linetype = 2)
dir(light.dir[23])
light.dir
dir(light.dir[23])
dir(light.dir[24])
light.dir
dir(light.dir[21])
light.dir
dir(light.dir[24])
light.dir
light.dir[24]
light.dir[21]
light.dir[23]
dir(light.dir[23])
dir(light.dir[24])
bbb <- read.csv(file = paste0(light.dir[24], "\\deck1_0990424.csv"), header = F)
ccc <- subset(haul_time_position, vessel == 94 & cruise == 201501)
names(bbb) <- c("date", "time", "cdepth", "temp", "clight")
bbb$datetime <- paste(bbb$date, bbb$time)
bbb$datetime <- as.POSIXct(bbb$datetime, format = "%m/%d/%Y %H:%M:%S", tz = "America/Anchorage")
#ccc <- subset(haul_time_position, vessel == 162 & cruise == 201401)
ccc <- subset(ccc, haul %in% aggregate(haul ~ yday(ccc$start_time), data = ccc, FUN = min)[,2])
ccc <- cbind(ccc,
astrocalc4r(day = day(ccc$start_time),
month = month(ccc$start_time),
year = year(ccc$start_time),
hour = hour(ccc$start_time) + minute(ccc$start_time)/60,
timezone = rep(-8, nrow(ccc)),
lat = ccc$start_latitude,
lon = ccc$start_longitude,
seaorland = "maritime"))
ccc$sunrise2 <- as.POSIXct(paste(date(ccc$start_time), " ", floor(ccc$sunrise), ":", floor(ccc$sunrise%%1 * 60), ":", floor((ccc$sunrise%%1 * 60)%%1*60), sep = ""), tz = "America/Anchorage")
ggplot() + geom_path(data = bbb, aes(x = datetime, y = clight)) +
geom_vline(data = ccc, aes(xintercept = sunrise2), col = "red", linetype = 2)
bb1 <- read.csv(file = paste0(light.dir[23], "\\deck1_1190403.csv"), header = F)
bb2 <- read.csv(file = paste0(light.dir[24], "\\deck1_0990424.csv"), header = F)
bb1 <- read.csv(file = paste0(light.dir[23], "\\deck1_1190403.csv"), header = F)
names(bb1) <- c("date", "time", "cdepth", "temp", "clight")
bb2 <- read.csv(file = paste0(light.dir[24], "\\deck1_0990424.csv"), header = F)
names(bb2) <- c("date", "time", "cdepth", "temp", "clight")
source('C:/Users/seanr/OneDrive/afsc/Light data processing/TLUtilities/test.R', echo=TRUE)
light.dir[24]
library(trawllight)
library(ggplot2)
library(plyr)
library(dplyr)
library(fishmethods)
library(TLUtilities)
# source TLUtilities functions for testing
sapply(paste("./R/", dir("./R/"), sep = ""), source)
# Import csv file containing filepaths for light data DIRECTORIES. Each target directories should contain corr_Mk9Hauls.csv, deck1**.csv, and CastTimes.csv for a vessel/cruise combination. This list needs to be created by the user.
light.dir <- read.csv("D:/Projects/OneDrive/Thesis/Chapter 1 - Visual Foraging Condition in the Eastern Bering Sea/data/fileinv_lightdata_directory.csv", stringsAsFactors = F, header = F)
# Only use EBS shelf directories.
light.dir <- light.dir[which(grepl("ebs", light.dir[,1])),1]
# Import csv file containing filepaths for light data DIRECTORIES. Each target directories should contain corr_Mk9Hauls.csv, deck1**.csv, and CastTimes.csv for a vessel/cruise combination. This list needs to be created by the user.
light.dir <- read.csv("../testing_space/imports/directories.csv", header = F, stringsAsFactors = F)
# Only use EBS shelf directories.
light.dir <- light.dir[which(grepl("ebs", light.dir[,1])),1]
# Let's examine what this does
print(head(light.dir))
haul_time_position <- readRDS("../testing_space/data/haul_time_position.rds")
bb1 <- read.csv(file = paste0(light.dir[23], "\\deck1_1190403.csv"), header = F)
names(bb1) <- c("date", "time", "cdepth", "temp", "clight")
light.dir[23]
bb1 <- read.csv(file = paste0(light.dir[23], "\\deck1_1190403.csv"), header = F)
names(bb1) <- c("date", "time", "cdepth", "temp", "clight")
bb1$vessel < "v162"
bb2 <- read.csv(file = paste0(light.dir[24], "\\deck1_0990424.csv"), header = F)
names(bb2) <- c("date", "time", "cdepth", "temp", "clight")
bb2$vessel <- "v94"
rm(bb1, bb2)
timeMismatch <- function() {
bb1 <- read.csv(file = paste0(light.dir[23], "\\deck1_1190403.csv"), header = F)
names(bb1) <- c("date", "time", "cdepth", "temp", "clight")
bb1$vessel < "v162"
bb2 <- read.csv(file = paste0(light.dir[24], "\\deck1_0990424.csv"), header = F)
names(bb2) <- c("date", "time", "cdepth", "temp", "clight")
bb2$vessel <- "v94"
bb <- rbind(bb1, bb2)
bb$datetime <- paste(bb$date, bb$time)
bb$datetime <- as.POSIXct(bb$datetime, format = "%m/%d/%Y %H:%M:%S", tz = "America/Anchorage")
print(ggplot() + geom_path(data = bb, aes(x = datetime, y = clight, color = vessel)))
}
timeMismatch()
timeMismatch <- function() {
bb1 <- read.csv(file = paste0(light.dir[23], "\\deck1_1190403.csv"), header = F)
names(bb1) <- c("date", "time", "cdepth", "temp", "clight")
bb1$vessel < "v162"
bb2 <- read.csv(file = paste0(light.dir[24], "\\deck1_0990424.csv"), header = F)
names(bb2) <- c("date", "time", "cdepth", "temp", "clight")
bb2$vessel <- "v94"
print(ncol(bb1))
print(ncol(bb2))
bb <- rbind(bb1, bb2)
bb$datetime <- paste(bb$date, bb$time)
bb$datetime <- as.POSIXct(bb$datetime, format = "%m/%d/%Y %H:%M:%S", tz = "America/Anchorage")
print(ggplot() + geom_path(data = bb, aes(x = datetime, y = clight, color = vessel)))
}
timeMismatch()
bb2 <- read.csv(file = paste0(light.dir[24], "\\deck1_0990424.csv"), header = F)
print(head(bb2))
bb1 <- read.csv(file = paste0(light.dir[23], "\\deck1_1190403.csv"), header = F)
print(head(bb1))
bb <- rbind(bb1, bb2)
timeMismatch <- function() {
bb1 <- read.csv(file = paste0(light.dir[23], "\\deck1_1190403.csv"), header = F)
names(bb1) <- c("date", "time", "cdepth", "temp", "clight")
bb1$vessel < "v162"
bb2 <- read.csv(file = paste0(light.dir[24], "\\deck1_0990424.csv"), header = F)
names(bb2) <- c("date", "time", "cdepth", "temp", "clight")
bb2$vessel <- "v94"
bb <- rbind(bb1, bb2)
bb$datetime <- paste(bb$date, bb$time)
bb$datetime <- as.POSIXct(bb$datetime, format = "%m/%d/%Y %H:%M:%S", tz = "America/Anchorage")
print(ggplot() + geom_path(data = bb, aes(x = datetime, y = clight, color = vessel)))
}
timeMismatch()
ggplot() + geom_path(data = bb, aes(x = datetime, y = clight, color = vessel))
bb1 <- read.csv(file = paste0(light.dir[23], "\\deck1_1190403.csv"), header = F)
names(bb1) <- c("date", "time", "cdepth", "temp", "clight")
bb1$vessel < "v162"
bb2 <- read.csv(file = paste0(light.dir[24], "\\deck1_0990424.csv"), header = F)
names(bb2) <- c("date", "time", "cdepth", "temp", "clight")
rm(bb1, bb2)
timeMismatch <- function() {
bb1 <- read.csv(file = paste0(light.dir[23], "\\deck1_1190403.csv"), header = F)
names(bb1) <- c("date", "time", "cdepth", "temp", "clight")
bb1$vessel <- "v162"
bb2 <- read.csv(file = paste0(light.dir[24], "\\deck1_0990424.csv"), header = F)
names(bb2) <- c("date", "time", "cdepth", "temp", "clight")
bb2$vessel <- "v94"
bb <- rbind(bb1, bb2)
bb$datetime <- paste(bb$date, bb$time)
bb$datetime <- as.POSIXct(bb$datetime, format = "%m/%d/%Y %H:%M:%S", tz = "America/Anchorage")
print(ggplot() + geom_path(data = bb, aes(x = datetime, y = clight, color = vessel)))
}
timeMismatch()
timeMismatch <- function() {
bb1 <- read.csv(file = paste0(light.dir[23], "\\deck1_1190403.csv"), header = F)
names(bb1) <- c("date", "time", "cdepth", "temp", "clight")
bb1$vessel <- "v162"
bb2 <- read.csv(file = paste0(light.dir[24], "\\deck1_0990424.csv"), header = F)
names(bb2) <- c("date", "time", "cdepth", "temp", "clight")
bb2$vessel <- "v94"
bb <- rbind(bb1, bb2)
bb$datetime <- paste(bb$date, bb$time)
bb$datetime <- as.POSIXct(bb$datetime, format = "%m/%d/%Y %H:%M:%S", tz = "America/Anchorage")
print(ggplot() + geom_path(data = subset(bb, month(datetime) < 6 & day(datetime) < 15), aes(x = datetime, y = clight, color = vessel)))
}
timeMismatch()
timeMismatch <- function() {
bb1 <- read.csv(file = paste0(light.dir[23], "\\deck1_1190403.csv"), header = F)
names(bb1) <- c("date", "time", "cdepth", "temp", "clight")
bb1$vessel <- "v162"
bb2 <- read.csv(file = paste0(light.dir[24], "\\deck1_0990424.csv"), header = F)
names(bb2) <- c("date", "time", "cdepth", "temp", "clight")
bb2$vessel <- "v94"
bb <- rbind(bb1, bb2)
bb$datetime <- paste(bb$date, bb$time)
bb$datetime <- as.POSIXct(bb$datetime, format = "%m/%d/%Y %H:%M:%S", tz = "America/Anchorage")
print(ggplot() + geom_path(data = subset(bb, month(datetime) < 7 & day(datetime) < 15), aes(x = datetime, y = clight, color = vessel)))
}
timeMismatch()
timeMismatch <- function() {
bb1 <- read.csv(file = paste0(light.dir[23], "\\deck1_1190403.csv"), header = F)
names(bb1) <- c("date", "time", "cdepth", "temp", "clight")
bb1$vessel <- "v162"
bb2 <- read.csv(file = paste0(light.dir[24], "\\deck1_0990424.csv"), header = F)
names(bb2) <- c("date", "time", "cdepth", "temp", "clight")
bb2$vessel <- "v94"
bb <- rbind(bb1, bb2)
bb$datetime <- paste(bb$date, bb$time)
bb$datetime <- as.POSIXct(bb$datetime, format = "%m/%d/%Y %H:%M:%S", tz = "America/Anchorage")
print(ggplot() + geom_path(data = subset(bb, month(datetime) >= 7 & day(datetime) > 15), aes(x = datetime, y = clight, color = vessel)))
}
timeMismatch()
timeMismatch <- function() {
bb1 <- read.csv(file = paste0(light.dir[23], "\\deck1_1190403.csv"), header = F)
names(bb1) <- c("date", "time", "cdepth", "temp", "clight")
bb1$vessel <- "v162"
bb2 <- read.csv(file = paste0(light.dir[24], "\\deck1_0990424.csv"), header = F)
names(bb2) <- c("date", "time", "cdepth", "temp", "clight")
bb2$vessel <- "v94"
bb <- rbind(bb1, bb2)
bb$datetime <- paste(bb$date, bb$time)
bb$datetime <- as.POSIXct(bb$datetime, format = "%m/%d/%Y %H:%M:%S", tz = "America/Anchorage")
bb$datetime[bb$vessel == "v94"] <- bb$datetime[bb$vessel == "v94"] - 3600
print(ggplot() + geom_path(data = subset(bb, month(datetime) >= 7 & day(datetime) > 15), aes(x = datetime, y = clight, color = vessel)))
}
timeMismatch()
library(TLUtilities)
