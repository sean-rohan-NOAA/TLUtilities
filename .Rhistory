rm(list = ls())
ebs_surface <- process_all_surface(dir.structure = light.dir[c(10, 15)], time.buffer = 30)
light.dir <- read.csv("D:/Projects/OneDrive/Thesis/Chapter 1 - Visual Foraging Condition in the Eastern Bering Sea/data/fileinv_lightdata_directory.csv", stringsAsFactors = F, header = F)
# Select EBS shelf directories
light.dir <- light.dir[which(grepl("ebs", light.dir[,1])),1]
ebs_surface <- process_all_surface(dir.structure = light.dir[c(10, 15)], time.buffer = 30)
library(trawllight)
ebs_surface <- process_all_surface(dir.structure = light.dir[c(10, 15)], time.buffer = 30)
light.dir
table(ebs_surface$updown)
print(table(ebs_surface$updown, ebs_surface$cruise))
View(surface_light)
getwd
getwd()
haul_time_position <- readRDS("haul_time_position.RData")
str(haul_time_position)
haul_time_position <- readRDS("haul_time_position.RData")
str(haul_time_position)
library(fishmethods)
day(haul_time_position$start_time)
head(ebs_surface)
ebs_surface.haul <- merge(ebs_surface, haul.dat)
haul.dat <- readRDS("./data/haul_time_position.RData")
ebs_surface.haul <- merge(ebs_surface, haul.dat)
nrow(ebs_surface.haul)
nrow(ebs_surface)
ebs_surface.haul
library(lubridate)
?day
day(haul.dat$start_time)
str(haul.dat)
haul.dat <- readRDS("./data/haul_time_position.RData")
print(str(haul.dat))
ebs_surface.haul <- merge(ebs_surface, haul.dat)
ebs_surface.haul <- subset(ebs_surface.haul, updown == "Downcast")
haul.dat <- readRDS("./data/haul_time_position.RData")
print(str(haul.dat))
ebs_surface.haul <- merge(ebs_surface, haul.dat)
head(ebs_surface.haul)
ebs_surface.haul <- subset(ebs_surface.haul, updown == "Downcast")
head(ebs_surface.haul)
library(fishmethods)
library(lubridate)
astrocalc4r(day = day(ebs_surface.haul$start_time),
month = month(ebs_surface.haul$start_time),
year = year(ebs_surface.haul$start_time),
hour = hour(ebs_surface.haul$start_time),
timezone = rep(-8, nrow(ebs_surface.haul)),
lat = ebs_surface.haul$start_latitude,
lon = ebs_surface.haul$start_longitude,
seaorland = rep("maritime", nrow(ebs_surface.haul)))
rep(-8, nrow(ebs_surface.haul))
astrocalc4r(day = day(ebs_surface.haul$start_time),
month = month(ebs_surface.haul$start_time),
year = year(ebs_surface.haul$start_time),
hour = hour(ebs_surface.haul$start_time) + minute(ebs_surface.haul$start_time)/60,
timezone = rep(-8, nrow(ebs_surface.haul)),
lat = ebs_surface.haul$start_latitude,
lon = ebs_surface.haul$start_longitude,
seaorland = "maritime")
ebs_surface.haul <- rbind(ebs_surface.haul,
astrocalc4r(day = day(ebs_surface.haul$start_time),
month = month(ebs_surface.haul$start_time),
year = year(ebs_surface.haul$start_time),
hour = hour(ebs_surface.haul$start_time) + minute(ebs_surface.haul$start_time)/60,
timezone = rep(-8, nrow(ebs_surface.haul)),
lat = ebs_surface.haul$start_latitude,
lon = ebs_surface.haul$start_longitude,
seaorland = "maritime"))
ebs_surface.haul <- cbind(ebs_surface.haul,
astrocalc4r(day = day(ebs_surface.haul$start_time),
month = month(ebs_surface.haul$start_time),
year = year(ebs_surface.haul$start_time),
hour = hour(ebs_surface.haul$start_time) + minute(ebs_surface.haul$start_time)/60,
timezone = rep(-8, nrow(ebs_surface.haul)),
lat = ebs_surface.haul$start_latitude,
lon = ebs_surface.haul$start_longitude,
seaorland = "maritime"))
head(ebs_surface.haul)
min(ebs_surface.haul$PAR)
ggplot(data = ebs_surface.haul) + geom_point(aes(x = PAR, y = log10(surf_trans_llight)))
library(ggplot2)
ggplot(data = ebs_surface.haul) + geom_point(aes(x = PAR, y = log10(surf_trans_llight)))
ggplot(data = ebs_surface.haul) + geom_point(aes(x = log10(PAR), y = log10(surf_trans_llight)))
ggplot(data = ebs_surface.haul) + geom_point(aes(x = log10(PAR + 0.001), y = log10(surf_trans_llight)))
ebs_surface <- process_all_surface(dir.structure = light.dir[c(1, 5, 10:15)], time.buffer = 30)
print(head(ebs_surface))
print(table(ebs_surface$updown, ebs_surface$cruise))
haul.dat <- readRDS("./data/haul_time_position.RData")
print(str(haul.dat))
ebs_surface.haul <- merge(ebs_surface, haul.dat)
ebs_surface.haul <- subset(ebs_surface.haul, updown == "Downcast")
library(fishmethods)
library(lubridate)
ebs_surface.haul <- cbind(ebs_surface.haul,
astrocalc4r(day = day(ebs_surface.haul$start_time),
month = month(ebs_surface.haul$start_time),
year = year(ebs_surface.haul$start_time),
hour = hour(ebs_surface.haul$start_time) + minute(ebs_surface.haul$start_time)/60,
timezone = rep(-8, nrow(ebs_surface.haul)),
lat = ebs_surface.haul$start_latitude,
lon = ebs_surface.haul$start_longitude,
seaorland = "maritime"))
print(head(ebs_surface.haul))
ggplot(data = ebs_surface.haul) + geom_point(aes(x = log10(PAR), y = log10(surf_trans_llight)))
ggplot(data = ebs_surface.haul) + geom_point(aes(x = log10(PAR), y = log10(surf_trans_llight + 0.001)))
ggplot(data = ebs_surface.haul) + geom_point(aes(x = log10(PAR + 0.001), y = log10(surf_trans_llight)))
ggplot(data = ebs_surface.haul) + geom_point(aes(x = log10(PAR + 0.001), y = surf_trans_llight))
ggplot(data = ebs_surface.haul) + geom_point(aes(x = PAR + 0.001, y = surf_trans_llight))
ggplot(data = ebs_surface.haul) + geom_point(aes(x = PAR + 0.001, y = log10(surf_trans_llight)))
ggplot(data = ebs_surface.haul) + geom_point(aes(x = PAR, y = log10(surf_trans_llight)))
ggplot(data = ebs_surface.haul) + geom_point(aes(x = PAR, y = log10(surf_trans_llight), color = factor(vessel)))
ggplot(data = ebs_surface.haul) + geom_point(aes(x = PAR, y = log10(surf_trans_llight), color = interaction(vessel, cruise)))
ggplot(data = ebs_surface.haul) + geom_point(aes(x = PAR, y = log10(surf_trans_llight), color = interaction(vessel, cruise))) + geom_smooth(aes(x = PAR, y = log10(surf_trans_llight)))
ggplot(data = ebs_surface.haul) + geom_point(aes(x = log10(PAR + 0.001), y = log10(surf_trans_llight), color = interaction(vessel, cruise))) + geom_smooth(aes(x = PAR, y = log10(surf_trans_llight)))
ggplot(data = ebs_surface.haul) + geom_point(aes(x = log10(PAR + 0.001), y = log10(surf_trans_llight), color = interaction(vessel, cruise))) + geom_smooth(aes(x = log10(PAR+0.001), y = log10(surf_trans_llight)))
min(ebs_surface.haul)
min(ebs_surface.haul$PAR)
ggplot(data = subset(ebs_surface.haul, PAR > 10)) +
geom_point(aes(x = log10(PAR + 0.001), y = log10(surf_trans_llight), color = interaction(vessel, cruise))) +
geom_smooth(aes(x = log10(PAR + 0.001), y = log10(surf_trans_llight)))
ggplot(data = ebs_surface.haul) +
geom_point(aes(x = log10(PAR + 0.001), y = log10(surf_trans_llight), color = interaction(vessel, cruise))) +
geom_smooth(aes(x = log10(PAR + 0.001), y = log10(surf_trans_llight)))
dir.list
light.dir
dir(light.dir[6])
light.dir[6]
bbb <- read.csv(file = paste(light.dir[6], "deck1_0490941.csv", sep = ""))
bbb <- read.csv(file = paste(light.dir[6], "\\deck1_0490941.csv", sep = ""))
bbb
bbb <- read.csv(file = paste(light.dir[6], "\\deck1_0490941.csv", sep = ""), header = F)
head(bbb)
names(bbb) <- c("date", "time", "cdepth", "temp", "clight")
bbb$datetime <- paste(bbb$date, bbb$time)
as.POSIXct(bbb$datetime[1])
as.POSIXct(bbb$datetime[1], format = "%M/%D/%Y %h:%m:%s")
as.POSIXct(bbb$datetime[1], format = "%m/%d/%Y %H:%M:%S")
as.POSIXct(bbb$datetime[1], format = "%m/%d/%Y %H:%M:%S", tz = "Alaska/Anchorage")
as.POSIXct(bbb$datetime[1], format = "%m/%d/%Y %H:%M:%S", tz = "America/Anchorage")
bbb$datetime <- as.POSIXct(bbb$datetime[1], format = "%m/%d/%Y %H:%M:%S", tz = "America/Anchorage")
ggplot(data = bbb$datetime, aes(x = datetime, y = clight)) + geom_path()
ggplot(data = bbb, aes(x = datetime, y = clight)) + geom_path()
bbb <- read.csv(file = paste(light.dir[6], "\\deck1_0490941.csv", sep = ""), header = F)
names(bbb) <- c("date", "time", "cdepth", "temp", "clight")
bbb$datetime <- paste(bbb$date, bbb$time)
bbb$datetime <- as.POSIXct(bbb$datetime, format = "%m/%d/%Y %H:%M:%S", tz = "America/Anchorage")
ggplot(data = bbb, aes(x = datetime, y = clight)) + geom_path()
ccc <- subset(haul_time_position, vessel == 134 & cruise == 200601)
ccc
ccc <- subset(haul_time_position, vessel == 134 & cruise == 200601)
ccc <- cbind(ccc,
astrocalc4r(day = day(ccc$start_time),
month = month(ccc$start_time),
year = year(ccc$start_time),
hour = hour(ccc$start_time) + minute(ccc$start_time)/60,
timezone = rep(-8, nrow(ccc)),
lat = ccc$start_latitude,
lon = ccc$start_longitude,
seaorland = "maritime"))
ccc$sunrise
date(ccc$start_time)
ccc$sunrise%%1
ccc$sunrise%%1 * 60
floor(ccc$sunrise%%1 * 60)
ccc$sunrise%%1 * 60
(ccc$sunrise%%1 * 60)%%1
(ccc$sunrise%%1 * 60)%%1 * 60
paste(date(ccc$start_time), " ", floor(ccc$sunrise), ":", floor(ccc$sunrise%%1 * 60), ":", (ccc$sunrise%%1 * 60)%%1*60, sep = "")
paste(date(ccc$start_time), " ", floor(ccc$sunrise), ":", floor(ccc$sunrise%%1 * 60), ":", floor(ccc$sunrise%%1 * 60)%%1*60), sep = "")
paste(date(ccc$start_time), " ", floor(ccc$sunrise), ":", floor(ccc$sunrise%%1 * 60), ":", floor((ccc$sunrise%%1 * 60)%%1*60), sep = "")
as.POSIXct(paste(date(ccc$start_time), " ", floor(ccc$sunrise), ":", floor(ccc$sunrise%%1 * 60), ":", floor((ccc$sunrise%%1 * 60)%%1*60), sep = ""))
as.POSIXct(paste(date(ccc$start_time), " ", floor(ccc$sunrise), ":", floor(ccc$sunrise%%1 * 60), ":", floor((ccc$sunrise%%1 * 60)%%1*60), sep = ""), tz = "America/Anchorage")
nrow(ccc)
ccc$sunrise2 <- as.POSIXct(paste(date(ccc$start_time), " ", floor(ccc$sunrise), ":", floor(ccc$sunrise%%1 * 60), ":", floor((ccc$sunrise%%1 * 60)%%1*60), sep = ""), tz = "America/Anchorage")
ggplot() + geom_path(data = bbb, aes(x = datetime, y = clight)) + geom_vline(data = ccc, aes(xintercept = sunrise2), col = "red", linetype = 2)
head(bbb)
ggplot() + geom_path(data = subset(bbb, month(datetime) == 6), aes(x = datetime, y = clight)) +
geom_vline(data = subset(ccc, month(sunrise2) == 6), aes(xintercept = sunrise2), col = "red", linetype = 2)
library(plotly)
ggplotly(ggplot(data = ebs_surface.haul) +
geom_point(aes(x = log10(PAR + 0.001), y = log10(surf_trans_llight), color = interaction(vessel, cruise))) +
geom_smooth(aes(x = log10(PAR + 0.001), y = log10(surf_trans_llight))))
ccc <- subset(haul_time_position, vessel == 134 & cruise == 200601)
ccc <- cbind(ccc,
astrocalc4r(day = day(ccc$start_time),
month = month(ccc$start_time),
year = year(ccc$start_time),
hour = hour(ccc$start_time + 1) + minute(ccc$start_time)/60,
timezone = rep(-8, nrow(ccc)),
lat = ccc$start_latitude,
lon = ccc$start_longitude,
seaorland = "maritime"))
bbb <- read.csv(file = paste(light.dir[6], "\\deck1_0490941.csv", sep = ""), header = F)
names(bbb) <- c("date", "time", "cdepth", "temp", "clight")
bbb$datetime <- paste(bbb$date, bbb$time)
bbb$datetime <- as.POSIXct(bbb$datetime, format = "%m/%d/%Y %H:%M:%S", tz = "America/Anchorage")
ccc <- subset(haul_time_position, vessel == 134 & cruise == 200601)
ccc <- cbind(ccc,
astrocalc4r(day = day(ccc$start_time),
month = month(ccc$start_time),
year = year(ccc$start_time),
hour = hour(ccc$start_time) + minute(ccc$start_time)/60,
timezone = rep(-8, nrow(ccc)),
lat = ccc$start_latitude,
lon = ccc$start_longitude,
seaorland = "maritime"))
ccc$sunrise2 <- as.POSIXct(paste(date(ccc$start_time), " ", floor(ccc$sunrise), ":", floor(ccc$sunrise%%1 * 60), ":", floor((ccc$sunrise%%1 * 60)%%1*60), sep = ""), tz = "America/Anchorage")
ggplot(data = bbb, aes(x = datetime + 3600, y = clight)) + geom_path()
ggplot() + geom_path(data = subset(bbb, month(datetime) == 6), aes(x = datetime + 3600, y = clight)) +
geom_vline(data = subset(ccc, month(sunrise2) == 6), aes(xintercept = sunrise2), col = "red", linetype = 2)
haul_time_position <- readRDS("./data/haul_time_position.rds")
library(TLUtilities)
knitr::opts_chunk$set(echo = TRUE)
haul.dat <- readRDS("./data/haul_time_position.rds")
print(str(haul.dat))
bbb <- read.csv(file = paste(light.dir[6], "\\deck1_0490941.csv", sep = ""), header = F)
names(bbb) <- c("date", "time", "cdepth", "temp", "clight")
bbb$datetime <- paste(bbb$date, bbb$time)
bbb$datetime <- as.POSIXct(bbb$datetime, format = "%m/%d/%Y %H:%M:%S", tz = "America/Anchorage")
ccc <- subset(haul_time_position, vessel == 134 & cruise == 200601)
ccc <- cbind(ccc,
astrocalc4r(day = day(ccc$start_time),
month = month(ccc$start_time),
year = year(ccc$start_time),
hour = hour(ccc$start_time) + minute(ccc$start_time)/60,
timezone = rep(-8, nrow(ccc)),
lat = ccc$start_latitude,
lon = ccc$start_longitude,
seaorland = "maritime"))
ccc$sunrise2 <- as.POSIXct(paste(date(ccc$start_time), " ", floor(ccc$sunrise), ":", floor(ccc$sunrise%%1 * 60), ":", floor((ccc$sunrise%%1 * 60)%%1*60), sep = ""), tz = "America/Anchorage")
ggplot(data = bbb, aes(x = datetime + 3600, y = clight)) + geom_path()
ggplot() + geom_path(data = subset(bbb, month(datetime) == 6), aes(x = datetime + 3600, y = clight)) +
geom_vline(data = subset(ccc, month(sunrise2) == 6), aes(xintercept = sunrise2), col = "red", linetype = 2)
ight.dir[5]
light.dir[5]
light.dir[6]
bbb <- read.csv(file = paste(light.dir[5], "\\deck1_0490941.csv", sep = ""), header = F)
bbb <- read.csv(file = paste(light.dir[5], "\\deck**.csv", sep = ""), header = F)
light.dir[5]
getwd(light.dir[5])
dir(light.dir[5])
bbb <- read.csv(file = paste(light.dir[5], "\\deck1_0490940.csv", sep = ""), header = F)
names(bbb) <- c("date", "time", "cdepth", "temp", "clight")
bbb$datetime <- paste(bbb$date, bbb$time)
bbb$datetime <- as.POSIXct(bbb$datetime, format = "%m/%d/%Y %H:%M:%S", tz = "America/Anchorage")
ccc <- subset(haul_time_position, vessel == 134 & cruise == 200601)
ccc <- cbind(ccc,
astrocalc4r(day = day(ccc$start_time),
month = month(ccc$start_time),
year = year(ccc$start_time),
hour = hour(ccc$start_time) + minute(ccc$start_time)/60,
timezone = rep(-8, nrow(ccc)),
lat = ccc$start_latitude,
lon = ccc$start_longitude,
seaorland = "maritime"))
ccc$sunrise2 <- as.POSIXct(paste(date(ccc$start_time), " ", floor(ccc$sunrise), ":", floor(ccc$sunrise%%1 * 60), ":", floor((ccc$sunrise%%1 * 60)%%1*60), sep = ""), tz = "America/Anchorage")
ggplot(data = bbb, aes(x = datetime, y = clight)) + geom_path()
ggplot() + geom_path(data = subset(bbb, month(datetime) == 6), aes(x = datetime, y = clight)) +
geom_vline(data = subset(ccc, month(sunrise2) == 6), aes(xintercept = sunrise2), col = "red", linetype = 2)
ggplot(data = bbb, aes(x = datetime, y = clight)) + geom_path()
ggplot() + geom_path(data = subset(bbb, (month(datetime) + day(datetime)/100) > 7.15), aes(x = datetime, y = clight)) +
geom_vline(data = subset(ccc, (month(sunrise2) + day(sunrise2)/100) > 7.15), aes(xintercept = sunrise2), col = "red", linetype = 2)
ggplot() + geom_path(data = subset(bbb, (month(datetime) + day(datetime)/100) < 7.15), aes(x = datetime, y = clight)) +
geom_vline(data = subset(ccc, (month(sunrise2) + day(sunrise2)/100) < 7.15), aes(xintercept = sunrise2), col = "red", linetype = 2)
light.dir
test <- process_all_surface(dir.list = light.dir[5], time.buffer = 30)
test <- process_all_surface(dir.structure = light.dir[5], time.buffer = 30)
ggplot() + geom_path(data = subset(bbb, (month(datetime) + day(datetime)/100) < 7.15), aes(x = datetime, y = clight)) +
geom_vline(data = subset(ccc, (month(sunrise2) + day(sunrise2)/100) < 7.15), aes(xintercept = sunrise2), col = "red", linetype = 2)
ggplot() + geom_path(data = subset(bbb, (month(datetime) + day(datetime)/100) > 7.08), aes(x = datetime, y = clight)) +
geom_vline(data = subset(ccc, (month(sunrise2) + day(sunrise2)/100) > 7.08), aes(xintercept = sunrise2), col = "red", linetype = 2)
ggplot() + geom_path(data = subset(bbb, (month(datetime) + day(datetime)/100) > 7.07), aes(x = datetime, y = clight)) +
geom_vline(data = subset(ccc, (month(sunrise2) + day(sunrise2)/100) > 7.07), aes(xintercept = sunrise2), col = "red", linetype = 2)
ggplot() + geom_path(data = subset(bbb, (month(datetime) + day(datetime)/100) > 7.06), aes(x = datetime, y = clight)) +
geom_vline(data = subset(ccc, (month(sunrise2) + day(sunrise2)/100) > 7.06), aes(xintercept = sunrise2), col = "red", linetype = 2)
ggplot() + geom_path(data = subset(bbb, (month(datetime) + day(datetime)/100) > 7.06), aes(x = datetime, y = clight)) +
geom_vline(data = subset(ccc, (month(sunrise2 - 12 * 3600) + day(sunrise2 - 12 * 3600)/100) > 7.06), aes(xintercept = sunrise2), col = "red", linetype = 2)
ggplot() + geom_path(data = subset(bbb, (month(datetime) + day(datetime)/100) > 7.06), aes(x = datetime, y = clight)) +
geom_vline(data = subset(ccc, (month(sunrise2) + day(sunrise2)/100) > 7.06), aes(xintercept = sunrise2 + 12*3600), col = "red", linetype = 2)
ggplot() + geom_path(data = subset(bbb, (month(datetime) + day(datetime)/100) > 7.06), aes(x = datetime, y = clight)) +
geom_vline(data = subset(ccc, (month(sunrise2) + day(sunrise2)/100) > 7.06), aes(xintercept = sunrise2 - 12*3600), col = "red", linetype = 2)
ggplot() + geom_path(data = subset(bbb, (month(datetime) + day(datetime)/100) > 7.05), aes(x = datetime, y = clight)) +
geom_vline(data = subset(ccc, (month(sunrise2) + day(sunrise2)/100) > 7.05), aes(xintercept = sunrise2 - 12*3600), col = "red", linetype = 2)
ggplot() + geom_path(data = subset(bbb, (month(datetime) + day(datetime)/100) > 7.05), aes(x = datetime - 12 * 3600, y = clight)) +
geom_vline(data = subset(ccc, (month(sunrise2) + day(sunrise2)/100) > 7.05), aes(xintercept = sunrise2), col = "red", linetype = 2)
# In this case, archival tag timestamps were off by 12 hours. Subtracting 12*3600 from
head(ccc)
# Using astrocalc4r, I find the sunrise time for the latitude and longitude of every haul.
julian(ccc$start_time)
# Using astrocalc4r, I find the sunrise time for the latitude and longitude of every haul.
jd(ccc$start_time)
# Using astrocalc4r, I find the sunrise time for the latitude and longitude of every haul.
jday(ccc$start_time)
# Using astrocalc4r, I find the sunrise time for the latitude and longitude of every haul.
yday(ccc$start_time)
# Using astrocalc4r, I find the sunrise time for the latitude and longitude of every haul.
aggregate(haul ~ yday(ccc$start_time), data = ccc, FUN = min)
# Using astrocalc4r, I find the sunrise time for the latitude and longitude of every haul.
aggregate(haul ~ yday(ccc$start_time), data = ccc, FUN = min)[,2]
ccc <- subset(ccc, haul %in% aggregate(haul ~ yday(ccc$start_time), data = ccc, FUN = min)[,2])
ccc
# Using astrocalc4r, I find the sunrise time for the latitude and longitude for the first haul of every day.
ccc <- subset(haul_time_position, vessel == 134 & cruise == 200601)
ccc <- subset(ccc, haul %in% aggregate(haul ~ yday(ccc$start_time), data = ccc, FUN = min)[,2])
ccc <- cbind(ccc,
astrocalc4r(day = day(ccc$start_time),
month = month(ccc$start_time),
year = year(ccc$start_time),
hour = hour(ccc$start_time) + minute(ccc$start_time)/60,
timezone = rep(-8, nrow(ccc)),
lat = ccc$start_latitude,
lon = ccc$start_longitude,
seaorland = "maritime"))
ccc$sunrise2 <- as.POSIXct(paste(date(ccc$start_time), " ", floor(ccc$sunrise), ":", floor(ccc$sunrise%%1 * 60), ":", floor((ccc$sunrise%%1 * 60)%%1*60), sep = ""), tz = "America/Anchorage")
ggplot() + geom_path(data = subset(bbb, (month(datetime) + day(datetime)/100) < 7.15), aes(x = datetime, y = clight)) +
geom_vline(data = subset(ccc, (month(sunrise2) + day(sunrise2)/100) < 7.15), aes(xintercept = sunrise2), col = "red", linetype = 2)
ggplot() + geom_path(data = subset(bbb, month(datetime) >= 7 & day(datetime) > 5), aes(x = datetime - 12 * 3600, y = clight)) +
geom_vline(data = subset(ccc, month(sunrise2) >= 7 & day(sunrise2) > 5), aes(xintercept = sunrise2), col = "red", linetype = 2)
# Plot it.
ggplot() + geom_path(data = subset(bbb, month(datetime) <= 7 & day(datetime) < 15), aes(x = datetime, y = clight)) +
geom_vline(data = subset(ccc, month(sunrise2) <= 7 & day(sunrise2) < 15), aes(xintercept = sunrise2), col = "red", linetype = 2)
light.dir
dir(light.dir[15])
bbb <- read.csv(file = paste(light.dir[15], "\\deck1_1190097.csv", sep = ""), header = F)
head(bbb)
names(bbb) <- c("date", "time", "cdepth", "temp", "clight")
bbb$datetime <- paste(bbb$date, bbb$time)
bbb$datetime <- as.POSIXct(bbb$datetime, format = "%m/%d/%Y %H:%M:%S", tz = "America/Anchorage")
ggplot(data = bbb, aes(x = datetime, y = clight)) + geom_path()
# Using astrocalc4r, I find the sunrise time for the latitude and longitude for the first haul of every day.
ccc <- subset(haul_time_position, vessel == 162 & cruise == 201101)
ccc <- subset(ccc, haul %in% aggregate(haul ~ yday(ccc$start_time), data = ccc, FUN = min)[,2])
ccc <- cbind(ccc,
astrocalc4r(day = day(ccc$start_time),
month = month(ccc$start_time),
year = year(ccc$start_time),
hour = hour(ccc$start_time) + minute(ccc$start_time)/60,
timezone = rep(-8, nrow(ccc)),
lat = ccc$start_latitude,
lon = ccc$start_longitude,
seaorland = "maritime"))
ccc$sunrise2 <- as.POSIXct(paste(date(ccc$start_time), " ", floor(ccc$sunrise), ":", floor(ccc$sunrise%%1 * 60), ":", floor((ccc$sunrise%%1 * 60)%%1*60), sep = ""), tz = "America/Anchorage")
ggplot() + geom_path(data = bbb, aes(x = datetime, y = clight)) +
geom_vline(data = ccc, aes(xintercept = sunrise2), col = "red", linetype = 2)
ggplot() + geom_path(data = bbb, aes(x = datetime - 8 *3600, y = clight)) +
geom_vline(data = ccc, aes(xintercept = sunrise2), col = "red", linetype = 2)
ggplot() + geom_path(data = bbb, aes(x = datetime + 8 *3600, y = clight)) +
geom_vline(data = ccc, aes(xintercept = sunrise2), col = "red", linetype = 2)
ebs_surface <- process_all_surface(dir.structure = light.dir[c(1, 5, 10:15)], adjust.time = T, time.buffer = 30)
ggplot(data = ebs_surface.haul) +
geom_point(aes(x = log10(PAR + 0.001), y = log10(surf_trans_llight), color = paste(vessel, cruise, sep = "/"))) +
geom_smooth(aes(x = log10(PAR + 0.001), y = log10(surf_trans_llight))) +
scale_color_discrete(name = "Vessel/Cruise")
haul.dat <- readRDS("./data/haul_time_position.rds")
ebs_surface.haul <- subset(merge(ebs_surface, haul.dat), updown == "Downcast")
ebs_surface.haul <- cbind(ebs_surface.haul,
astrocalc4r(day = day(ebs_surface.haul$start_time),
month = month(ebs_surface.haul$start_time),
year = year(ebs_surface.haul$start_time),
hour = hour(ebs_surface.haul$start_time) + minute(ebs_surface.haul$start_time)/60,
timezone = rep(-8, nrow(ebs_surface.haul)),
lat = ebs_surface.haul$start_latitude,
lon = ebs_surface.haul$start_longitude,
seaorland = "maritime"))
ggplot(data = ebs_surface.haul) +
geom_point(aes(x = log10(PAR + 0.001), y = log10(surf_trans_llight), color = paste(vessel, cruise, sep = "/"))) +
geom_smooth(aes(x = log10(PAR + 0.001), y = log10(surf_trans_llight))) +
scale_color_discrete(name = "Vessel/Cruise")
library(TLUtilities)
knitr::opts_chunk$set(echo = TRUE)
ggplot(data = ebs_surface.haul) +
geom_point(aes(x = log10(PAR + 0.001), y = log10(surf_trans_llight), color = paste(vessel, cruise, sep = "/"))) +
geom_smooth(aes(x = log10(PAR + 0.001), y = log10(surf_trans_llight))) +
scale_color_discrete(name = "Vessel/Cruise")
rm(list = ls())
?astrocalc4r
library(TLUtilities)
knitr::opts_chunk$set(echo = TRUE)
library(trawllight)
library(TLUtilities)
light.dir <- read.csv("D:/Projects/OneDrive/Thesis/Chapter 1 - Visual Foraging Condition in the Eastern Bering Sea/data/fileinv_lightdata_directory.csv", stringsAsFactors = F, header = F)
# Select EBS shelf directories
light.dir <- light.dir[which(grepl("ebs", light.dir[,1])),1]
light.dir[1:3]
ebs <- process_all(dir.structure = light.dir[10],
cast.dir = "Downcast",
time.buffer = 20,
silent = T)
names(ebs)
head(ebs$loess_eval)
head(ebs$resid_fit)
head(ebs$atten_values)
head(ebs$light_ratios)
ebs_surface <- process_all_surface(dir.structure = light.dir[c(1, 5, 10:15)], adjust.time = F, time.buffer = 30)
head(ebs_surface)
table(ebs_surface$updown, ebs_surface$cruise)
haul.dat <- readRDS("./data/haul_time_position.rds")
str(haul.dat)
ebs_surface.haul <- merge(ebs_surface, haul.dat)
ebs_surface.haul <- subset(ebs_surface.haul, updown == "Downcast")
ebs_surface <- process_all_surface(dir.structure = light.dir[c(1, 5, 10:15)], adjust.time = T, time.buffer = 30)
ebs_surface.haul <- subset(merge(ebs_surface, haul.dat), updown == "Downcast")
ebs_surface.haul <- cbind(ebs_surface.haul,
astrocalc4r(day = day(ebs_surface.haul$start_time),
month = month(ebs_surface.haul$start_time),
year = year(ebs_surface.haul$start_time),
hour = hour(ebs_surface.haul$start_time) + minute(ebs_surface.haul$start_time)/60,
timezone = rep(-8, nrow(ebs_surface.haul)),
lat = ebs_surface.haul$start_latitude,
lon = ebs_surface.haul$start_longitude,
seaorland = "maritime"))
ggplot(data = ebs_surface.haul) +
geom_point(aes(x = log10(PAR + 0.001), y = log10(surf_trans_llight), color = paste(vessel, cruise, sep = "/"))) +
geom_smooth(aes(x = log10(PAR + 0.001), y = log10(surf_trans_llight))) +
scale_color_discrete(name = "Vessel/Cruise")
head(select(ebs_surface.haul, vessel, cruise, haul, updown, surf_trans_llight))
head(ebs$light_ratios)
x <- merge(ebs$light_ratios, select(ebs_surface.haul, vessel, cruise, haul, updown, surf_trans_llight))
head(x)
direct_residuals <- tag_residuals_direct(x = x, formula = log10(trans_llight) ~ log10(surf_trans_llight) + interaction(vessel, cruise),
water.col = "trans_llight",
surface.col = "surf_trans_llight",
depth.col = "cdepth",
depth.bins = c(1, 3, 5))
ebs <- process_all(dir.structure = light.dir[10:12],
cast.dir = "Downcast",
time.buffer = 20,
silent = T)
head(select(ebs_surface.haul, vessel, cruise, haul, updown, surf_trans_llight))
head(ebs$light_ratios)
x <- merge(ebs$light_ratios, select(ebs_surface.haul, vessel, cruise, haul, updown, surf_trans_llight))
direct_residuals <- tag_residuals_direct(x = x, formula = log10(trans_llight) ~ log10(surf_trans_llight) + interaction(vessel, cruise),
water.col = "trans_llight",
surface.col = "surf_trans_llight",
depth.col = "cdepth",
depth.bins = c(1, 3, 5))
require(plyr)
library(plyr)
direct_residuals <- tag_residuals_direct(x = x, formula = log10(trans_llight) ~ log10(surf_trans_llight) + interaction(vessel, cruise),
water.col = "trans_llight",
surface.col = "surf_trans_llight",
depth.col = "cdepth",
depth.bins = c(1, 3, 5))
direct_residuals
table(direct_residuals$direct_residual)
table(direct_residuals$cdepth)
ggplot(data = direct_residuals, aes(x = direct_residuals)) + geom_density() + facet_wrap(~cdepth, nrow = 1)
ggplot(data = direct_residuals, aes(x = direct_residual)) + geom_density() + facet_wrap(~cdepth, nrow = 1)
head(direct_residuals)
?deparse
rm(list = ls())
library(trawllight)
# source TLUtilities functions for testing
sapply(paste("./R/", dir("./R/"), sep = ""), source)
# Import csv file containing filepaths for light data DIRECTORIES. Each target directories should contain corr_Mk9Hauls.csv, deck1**.csv, and CastTimes.csv for a vessel/cruise combination. This list needs to be created by the user.
light.dir <- read.csv("D:/Projects/OneDrive/Thesis/Chapter 1 - Visual Foraging Condition in the Eastern Bering Sea/data/fileinv_lightdata_directory.csv", stringsAsFactors = F, header = F)
# Only use EBS shelf directories.
light.dir <- light.dir[which(grepl("ebs", light.dir[,1])),1]
# Wrapper function which runs TLUtilies::vertical_profiles(), trawllight::filter_stepwise(), and trawllight::calculate_attenuation() for every cast in each of the target directories. It is advisable to process only a few dierectories at a time due R memory limits and the potential for processing errors to occur. "Downcast" and "Upcast" should be processed separately. Here, I only use the 10th directory for Vessel 89, Cruise 200801
ebs <- process_all(dir.structure = light.dir[10],
cast.dir = "Downcast",
silent = F)
# Wrapper function which runs TLUtilies::vertical_profiles(), trawllight::filter_stepwise(), and trawllight::calculate_attenuation() for every cast in each of the target directories. It is advisable to process only a few dierectories at a time due R memory limits and the potential for processing errors to occur. "Downcast" and "Upcast" should be processed separately. Here, I only use the 10th directory for Vessel 89, Cruise 200801
ebs <- process_all(dir.structure = light.dir[10:12],
cast.dir = "Downcast",
silent = T)
uuu <- merge(subset(ebs$light_ratios, updown == "Downcast"), haul_time_position)
haul_time_position <- readRDS("./data/haul_time_position.rds")
uuu <- merge(subset(ebs$light_ratios, updown == "Downcast"), haul_time_position)
uuu <- merge(uuu, select(ebs_surf, vessel, cruise, haul, updown, surf_trans_llight))
library(ggplot2)
library(plyr)
library(dplyr)
library(fishmethods)
remove.packages(TLUtilites)
remove.packages("TLUtilites")
head(x)
uuu <- merge(subset(ebs$light_ratios, updown == "Downcast"), haul_time_position)
uuu <- merge(uuu, select(ebs_surf, vessel, cruise, haul, updown, surf_trans_llight))
head(uuu)
head(ebs_surf)
# Now that we have column data, it's time to get the corresponding surface light data.
# Wrapper function which runs TLUtilities::time_adjustments() and TLUtilities::surface_light().
ebs_surf <- process_all_surface(dir.list = light.dir, time.buffer = 30)
# Now that we have column data, it's time to get the corresponding surface light data.
# Wrapper function which runs TLUtilities::time_adjustments() and TLUtilities::surface_light().
ebs_surf <- process_all_surface(dir.structure = light.dir, time.buffer = 30)
ebs_surf <- process_all_surface(dir.structure = light.dir[10:12], time.buffer = 30)
library(TLUtilities)
ebs_surf <- process_all_surface(dir.structure = light.dir[10:12], time.buffer = 30)
library(TLUtilities)
ebs_surf <- process_all_surface(dir.structure = light.dir[10:12], time.buffer = 30, adjust.time = T)
uuu <- merge(subset(ebs$light_ratios, updown == "Downcast"), haul_time_position)
uuu <- merge(uuu, select(ebs_surf, vessel, cruise, haul, updown, surf_trans_llight))
head(ebs_surf)
select(ebs_surf, vessel, cruise, haul, updown, surf_trans_llight)
uuu <- merge(uuu, ebs_surf)
head(uuu)
uuu.resid <- tag_residuals_direct2(x = uuu)
head(uuu)
uuu.resid <- tag_residuals_direct2(x = uuu)
uuu.resid <- tag_residuals_direct(x = uuu)
head(uuu.resid)
uuu.resid <- tag_residuals_direct2(x = uuu)
head(uuu.resid)
uuu.resid$lm_dbin1
uuu.resid1 <- tag_residuals_direct(x = uuu)
uuu.resid2 <- tag_residuals_direct2(x = uuu)
head(uuu.resid1$direct_residual)
head(uuu.resid2$direct_residual)
head(uuu.resid2$resid_df$direct_residual)
