library(TLUtilities)
library(TLUtilities)
library(TLUtilities)
?scale
library(TLUtilities)
FALSE == "log"
NA == "log"
library(TLUtilities)
library(TLUtilities)
library(TLUtilities)
library(TLUtilities)
?scale
calculate_tsrho_by_layer <- function(t, s, rho, z, mld, mld.buffer) {
if(mld >= max(z)){
t_above <- mean(t, na.rm = TRUE)
t_below <- NA
s_above <- mean(s, na.rm = TRUE)
s_below <- NA
rho_above <- mean(rho, na.rm = TRUE)
rho_below <- NA
} else if(mld+30 >= max(z)){
t_above <- mean(t[z < mld], na.rm = TRUE)
t_below <- mean(t[z > max(z)-4], na.rm = TRUE)
s_above <- mean(s[z < mld], na.rm = TRUE)
s_below <- mean(s[z > max(z)-4], na.rm = TRUE)
rho_above <- mean(rho[z < mld], na.rm = TRUE)
rho_below  <- mean(rho[z > max(z)-4], na.rm = TRUE)
} else {
t_above <- mean(t[z < mld], na.rm = TRUE)
t_below <- mean(t[z > mld+30], na.rm = TRUE)
s_above <- mean(s[z < mld], na.rm = TRUE)
s_below <- mean(s[z > mld+30], na.rm = TRUE)
rho_above <- mean(rho[z < mld], na.rm = TRUE)
rho_below  <- mean(rho[z > mld+30], na.rm = TRUE)
}
return(list(t_above = t_above,
t_below = t_below,
s_above = s_above,
s_below = s_below,
rho_above = rho_above,
rho_below = rho_below))
}
library(TLUtilities)
-1625000--35000
(-1625000--35000)/300
(-1625000-35000)/300
(1625000-35000)/300
(-1625000-35000)/5000
(-1625000--35000)/5000
diff(c(-1625000, -35000))
diff(c(-1625000, -35000))/5000
5000*6
(1969500-379500)/5000
(-1625000--35000)/5000
library(TLUtilities)
rm(list = ls())
library(TLUtilities)
?spTransform
library(TLUtilities)
library(TLUtilities)
library(TLUtilities)
library(TLUtilities)
10:6
rep(1,5)
data.frame(z = c(1:5, 10:6), rho = c(rep(1,5), 2,2,1.95,1.8,1.4))
test <- data.frame(z = c(1:5, 10:6), rho = c(rep(1,5), 2,2,1.95,1.8,1.4))
calculate_bld(rho = test$rho, z = test$z)
calculate_bld <- function(rho, z, totdepth, threshold = 0.1) {
rho <- rho[order(z)]
z <- z[order(z)]
z.max <- max(z)
bottom.rho <- mean(rho[z >= (z.max - 5)])
bld.bin <- which(rho > (bottom.rho - threshold))
if(length(bld.bin) > 0) {
bld <- z[max(bld.bin)]
} else {
if(length(totdepth) > 0) {
bld <- 0
} else {
bld <- NA
}
}
return(bld)
}
test <- data.frame(z = c(1:5, 10:6), rho = c(rep(1,5), 2,2,1.95,1.8,1.4))
calculate_bld(rho = test$rho, z = test$z)
calculate_bld <- function(rho, z, totdepth, threshold = 0.1) {
rho <- rho[order(z)]
z <- z[order(z)]
z.max <- max(z)
print(rho)
print(z)
print(z.max)
bottom.rho <- mean(rho[z >= (z.max - 5)])
bld.bin <- which(rho > (bottom.rho - threshold))
print(bottom.rho)
print(bld.bin)
if(length(bld.bin) > 0) {
bld <- z[max(bld.bin)]
} else {
if(length(totdepth) > 0) {
bld <- 0
} else {
bld <- NA
}
}
return(bld)
}
test <- data.frame(z = c(1:5, 10:6), rho = c(rep(1,5), 2,2,1.95,1.8,1.4))
calculate_bld(rho = test$rho, z = test$z)
test <- data.frame(z = c(1:5, 15:6), rho = c(rep(1,5), 2,2,2,2,2,2,2,1.95,1.8,1.4))
calculate_bld(rho = test$rho, z = test$z)
calculate_bld <- function(rho, z, totdepth, threshold = 0.1) {
rho <- rho[order(z)]
z <- z[order(z)]
z.max <- max(z)
print(rho)
print(z)
print(z.max)
bottom.rho <- mean(rho[z >= (z.max - 5)])
bld.bin <- which(rho < (bottom.rho - threshold))
print(bottom.rho)
print(bld.bin)
if(length(bld.bin) > 0) {
bld <- z[max(bld.bin)]
} else {
if(length(totdepth) > 0) {
bld <- 0
} else {
bld <- NA
}
}
return(bld)
}
test <- data.frame(z = c(1:5, 15:6), rho = c(rep(1,5), 2,2,2,2,2,2,2,1.95,1.8,1.4))
calculate_bld(rho = test$rho, z = test$z)
library(TLUtilities)
library(TLUtilities)
library(TLUtilities)
1998
19882/514415
?TLUtilites::calculate_bld
?TLUtilities::calculate_bld
require(ggplot2)
ggplot() + geom_point(aes(x = 1, y = 1)) + scale_x_continuous(name = expression(Longitude~(*degree*W)))
ggplot() + geom_point(aes(x = 1, y = 1)) + scale_x_continuous(name = expression(Longitude~"("*degree*W)))
ggplot() + geom_point(aes(x = 1, y = 1)) + scale_x_continuous(name = expression(Longitude~"("~degree*W)))
ggplot() + geom_point(aes(x = 1, y = 1)) + scale_x_continuous(name = expression(Longitude~(~degree*W)))
ggplot() + geom_point(aes(x = 1, y = 1)) + scale_x_continuous(name = expression(Longitude~(degree*W)))
library(TLUtilities)
library(TLUtilities)
library(TLUtilities)
# Sean K. Rohan <skrohan@uw.edu>
# Last update: February 28, 2019
# Spatial interpolation with interpolation method selection based on leave-one-out cross validation
sum(pre)
apply(c(5,6,7), MARGIN = 1, FUN = exp)
apply(c(5,6,7), MARGIN = 2, FUN = exp)
vapply(c(5,6,7), MARGIN = 2, FUN = exp)
vapply(c(5,6,7), FUN = exp)
?vappy
?vapply
apply(c(5,6,7), FUN = exp)
apply(X = c(5,6,7), FUN = exp)
test <- c(5,6,7)
apply(test, FUN = exp)
apply(test, FUN = length)
test$dat <- c(5,6,7)
apply(test$dat, FUN = exp)
dim(test$dat)
?apply
dim(test$dat[,1])
dim(test$dat[,1], FUN = exp)
apply(test$dat[,1], FUN = exp)
sapply(test$dat, FUN = exp)
is.na(exp)
is.na(hi)
library(TLUtilities)
library(TLUtilities)
library(TLUtilities)
?stopif
?stop
length(vector())
length(data.frame())
library(TLUtilities)
sp::proj4string
sp::proj4string(sp_interp.df)
library(TLUtilities)
